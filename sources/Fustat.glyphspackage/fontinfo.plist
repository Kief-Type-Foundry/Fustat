{
.appVersion = "3246";
.formatVersion = 3;
axes = (
{
name = Weight;
tag = wght;
}
);
classes = (
{
code = "dotcenter-ar
dotcenter_threedotsdownbelow-ar
twodotshorizontalcenter-ar
twodotshorizontalcenter_tahabove-ar
twodotsverticalcenter-ar
threedotsupcenter-ar
threedotsdowncenter-ar
fourdotscenter-ar
#fourcenter-ar
tahcenter-ar
vinvertedcenter-ar
";
name = dotcenter;
},
{
code = "dotbelow-ar
dotbelow_threedotsdownbelow-ar
twodotshorizontalbelow-ar
twodotshorizontalbelow_tahabove-ar
twodotsverticalbelow-ar
threedotsupbelow-ar
threedotsdownbelow-ar
fourdotsbelow-ar
#fourbelow-ar
tahbelow-ar
vinvertedbelow-ar
";
name = dotbelow;
},
{
code = "hamzaabove-ar
wasla-ar
madda-ar
shadda-ar
fatha-ar
damma-ar
fathatan-ar
dammatan-ar
sukun-ar
kasra-ar
kasratan-ar
";
name = marktop;
},
{
code = "dotbelow-ar
dotbelow_threedotsdownbelow-ar
twodotshorizontalbelow-ar
twodotshorizontalbelow_tahabove-ar
twodotsverticalbelow-ar
threedotsupbelow-ar
threedotsdownbelow-ar
fourdotsbelow-ar
hamzabelow-ar
vbelow-ar
vinvertedbelow-ar
ring-ar
doubleverticalbarbelow-ar
tahbelow-ar
ringbelow-ar
kasra-ar
kasratan-ar
alefbelow-ar
";
name = markbottom;
},
{
code = "dotbelow-ar
twodotshorizontalbelow-ar
twodotsverticalbelow-ar
threedotsupbelow-ar
threedotsdownbelow-ar
fourdotsbelow-ar
vbelow-ar
vinvertedbelow-ar
ring-ar
ringbelow-ar
";
name = behdotbelow;
},
{
code = "dotbelow-ar.alt
twodotshorizontalbelow-ar.alt
twodotsverticalbelow-ar.alt
threedotsupbelow-ar.alt
threedotsdownbelow-ar.alt
fourdotsbelow-ar.alt
vbelow-ar.alt
vinvertedbelow-ar.alt
ring-ar.alt
ringbelow-ar.alt
";
name = behdotbelow.alt;
},
{
automatic = 1;
code = "hamza-ar alef-ar alef-ar.fina alef-ar.short alef-ar.short.fina behDotless-ar behDotless-ar.fina behDotless-ar.medi behDotless-ar.medi.high behDotless-ar.init behDotless-ar.init.high hah-ar hah-ar.fina hah-ar.medi hah-ar.init dal-ar dal-ar.fina reh-ar reh-ar.fina seen-ar seen-ar.fina seen-ar.medi seen-ar.init sad-ar sad-ar.fina sad-ar.medi sad-ar.init tah-ar tah-ar.fina tah-ar.medi tah-ar.init ain-ar ain-ar.fina ain-ar.medi ain-ar.init fehDotless-ar fehDotless-ar.fina fehDotless-ar.medi fehDotless-ar.init qafDotless-ar qafDotless-ar.fina kafDotless-ar kafDotless-ar.fina kaf-ar.medi kaf-ar.init keheh-ar keheh-ar.fina kafswash-ar kafswash-ar.fina kafswash-ar.medi kafswash-ar.init lam-ar lam-ar.fina lam-ar.medi lam-ar.init meem-ar meem-ar.ss01 meem-ar.fina meem-ar.fina.ss01 meem-ar.medi meem-ar.init noonghunna-ar noonghunna-ar.fina heh-ar heh-ar.fina heh-ar.medi heh-ar.init hehgoal-ar hehgoal-ar.fina hehgoal-ar.medi ae-ar hehDoachashmee-ar hehDoachashmee-ar.fina hehDoachashmee-ar.medi waw-ar waw-ar.fina alefMaksura-ar alefMaksura-ar.fina yehbarree-ar yehbarree-ar.fina yehbarree-ar.fina.narrow kashida-ar alefMadda-ar alefHamzaabove-ar alefHamzabelow-ar alefWasla-ar beh-ar teh-ar theh-ar tteh-ar tteheh-ar beeh-ar tehRing-ar tehThreedotsdown-ar peh-ar teheh-ar beheh-ar behThreedotsupabove-ar behThreedotsupbelow-ar tehThreedotsupbelow-ar behTwodotsbelowDotabove-ar behVinvertedbelow-ar behVabove-ar behVbelow-ar behhamzaabove-ar pehVabove-ar tehVabove-ar ttehVabove-ar jeem-ar khah-ar hahHamzaabove-ar hahTwodotsverticalabove-ar nyeh-ar dyeh-ar hahThreedotsabove-ar tcheh-ar tcheheh-ar tchehDotabove-ar hahTwodotshorizontalabove-ar hahThreedotsupbelow-ar hahTahbelow-ar hahTahTwodotshorizontalbelow-ar hahTahabove-ar jeemTwodotsabove-ar tchehVabove-ar jeemThreedotsabove-ar jeemThreedotsbelow-ar hahVinvertedbelow-ar thal-ar ddal-ar dalRing-ar dalDotbelow-ar dalDotbelowTah-ar dahal-ar ddahal-ar dul-ar dalThreedotsdown-ar dalFourdots-ar dalVinvertedabove-ar dalTwodotsverticalbelowTah-ar dalVinvertedbelow-ar dalThreedotsbelow-ar zain-ar rreh-ar rehv-ar rehRing-ar rehDotbelow-ar rehVbelow-ar rehDotbelowdotabove-ar rehTwodots-ar jeh-ar rehFourdots-ar rehVinvertedabove-ar rehTwodotsverticalabove-ar rehHamzaabove-ar rehTwodotshorizontalaboveTahabove-ar zainVinvertedabove-ar sheen-ar seenDotbelowDotabove-ar seenThreedotsbelow-ar sheenThreedotsbelow-ar sheenDotbelow-ar seenFourdotsabove-ar seenTwodotsverticalabove-ar seenTahTwodotshorizontalabove-ar seenVinvertedabove-ar dad-ar sadTwodotsbelow-ar sadThreedots-ar dadDotbelow-ar sadThreedotsbelow-ar zah-ar tahThreedots-ar tahTwodotsabove-ar tahDotbelow-ar tahThreedotsbelow-ar ghain-ar ainThreedots-ar ghainDotbelow-ar ainTwodotshorizontalabove-ar ainThreedotsdownabove-ar ainTwodotsverticalabove-ar ainThreedotsbelow-ar ghainThreedotsabove-ar feh-ar fehDotmovedbelow-ar fehDotbelow-ar veh-ar fehThreedotsbelow-ar peheh-ar fehTwodotsbelow-ar fehThreedotsupbelow-ar fehDotbelowThreedotsabove-ar fehAfrican-ar qaf-ar qafDotabove-ar qafThreedotsabove-ar qafDotbelow-ar qafAfrican-ar qafThreedotsaboveAfrican-ar qafDotbelowNoDotAbove-ar kaf-ar kafDotabove-ar ng-ar kafThreedotsbelow-ar kafTwodotshorizontalabove-ar kafDotbelow-ar kehehTwodotshorizontalabove-ar kehehThreedotsbelow-ar kafRing-ar gaf-ar gafRing-ar ngoeh-ar gafTwodotsbelow-ar gueh-ar gafThreedots-ar kehehDotabove-ar kehehThreedotsabove-ar kehehThreedotsupbelow-ar gafInvertedstroke-ar kehehVabove-ar kehehTwodotsverticalbelow-ar lamVabove-ar lamDotabove-ar lamThreedotsabove-ar lamThreedotsbelow-ar lamTahabove-ar meemThreedotsabove-ar meemDotabove-ar meemDotbelow-ar noon-ar noonDotbelow-ar rnoon-ar noonRing-ar noonThreedotsabove-ar noonTwodotsbelow-ar noonTahabove-ar noonVabove-ar noonAfrican-ar noonVinvertedabove-ar tehMarbuta-ar hehHamzaabove-ar hehgoalHamzaabove-ar tehMarbutagoal-ar hehVinvertedabove-ar wawHamzaabove-ar wawring-ar oe-ar u-ar yu-ar kirghizyu-ar wawTwodots-ar ve-ar wawDotabove-ar wawDotcenter-ar yehKashmiri-ar yehHamzaabove-ar yehVinvertedFarsi-ar yehTwodotsaboveFarsi-ar yehThreedotsaboveFarsi-ar yeh-ar yehFarsi-ar yehTail-ar yehVabove-ar e-ar yehTwodotsbelowHamzaabove-ar yehTwodotsbelowDotabove-ar yehbarreeHamzaabove-ar behDotless_hah-ar behDotless_hah-ar.init lam_alef-ar.fina.ss02 lam_alef-ar.fina lam_alef-ar lam_hah-ar lam_hah-ar.init";
name = ArabicLetters;
},
{
automatic = 1;
code = "A Aacute Abreve Acircumflex Adieresis Agrave Amacron Aogonek Aring Atilde AE B C Cacute Ccaron Ccedilla Cdotaccent D Dcaron Dcroat Eth E Eacute Ecaron Ecircumflex Edieresis Edotaccent Egrave Emacron Eogonek F G Gbreve Gcommaaccent Gdotaccent H Hbar I Iacute Icircumflex Idieresis Idotaccent Igrave Imacron Iogonek J K Kcommaaccent L Lacute Lcaron Lcommaaccent Ldot Lslash M N Nacute Ncaron Ncommaaccent Ntilde Eng O Oacute Ocircumflex Odieresis Ograve Ohungarumlaut Omacron Oslash Otilde OE P Thorn Q R Racute Rcaron Rcommaaccent S Sacute Scaron Scedilla Scommaaccent Germandbls T Tcaron Tcommaaccent U Uacute Ubreve Ucircumflex Udieresis Ugrave Uhungarumlaut Umacron Uogonek Uring V W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ygrave Z Zacute Zcaron Zdotaccent";
name = Uppercase;
}
);
customParameters = (
{
name = "Write lastChange";
value = 0;
},
{
name = "Write DisplayStrings";
value = 0;
},
{
name = "Use Line Breaks";
value = 1;
},
{
name = fsType;
value = (
);
},
{
name = "Use Typo Metrics";
value = 1;
},
{
name = "Don't use Production Names";
value = 0;
},
{
name = "Axis Mappings";
value = {
wght = {
200 = 30;
300 = 55;
400 = 75;
500 = 85;
600 = 100;
700 = 115;
800 = 135;
};
};
},
{
name = typoAscender;
value = 1000;
},
{
name = typoDescender;
value = -420;
},
{
name = typoLineGap;
value = 0;
},
{
name = hheaAscender;
value = 1000;
},
{
name = hheaDescender;
value = -420;
},
{
name = hheaLineGap;
value = 0;
},
{
name = winAscent;
value = 1100;
},
{
name = winDescent;
value = 420;
},
{
name = "meta Table";
value = (
{
data = "Arab,Latn";
tag = dlng;
},
{
data = "Arab,Latn";
tag = slng;
}
);
}
);
date = "2022-11-10 19:08:13 +0000";
familyName = Fustat;
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;

languagesystem arab dflt;
languagesystem arab FAR;
languagesystem arab URD;
languagesystem arab KSH;
languagesystem arab RHG;
languagesystem arab SND;

languagesystem latn dflt;
languagesystem latn ROM;
languagesystem latn MOL;
languagesystem latn CAT;
";
name = Languagesystems;
},
{
code = "lookup center_marks {
	sub @dotcenter				by @dotbelow;
} center_marks;

valueRecordDef <$dotshift 0 0 0> DOTSHIFT;
";
name = Lookups;
}
);
features = (
{
code = "script arab;
  language FAR;
	sub zero-persian	by zero-persian.locl;

  language URD;
	sub four-persian	by four-persian.locl;
	sub six-persian		by six-ar;
	sub seven-persian	by seven-persian.locl;
#	sub dammainverted-ar by dammainverted-ar.locl;

  language KSH;
	sub four-persian	by four-persian.locl;
	sub six-persian		by six-ar;
	sub seven-persian	by seven-persian.locl;

  language RHG;
	sub four-persian	by four-ar;
	sub six-persian		by six-ar;
	sub seven-persian	by seven-persian.locl;

  language SND;
	sub six-persian		by six-ar;
	sub seven-persian	by seven-persian.locl;
 	sub comma-ar		by commareversed;
 	sub semicolon-ar	by semicolonreversed;
";
tag = locl;
},
{
automatic = 1;
code = "script latn;
language ROM;
lookup locl_latn_0 {
	sub Scedilla by Scommaaccent;
	sub scedilla by scommaaccent;
} locl_latn_0;
language MOL;
lookup locl_latn_0;

script latn;
language CAT;
lookup locl_latn_1 {
	sub  l' periodcentered' l by ldot;
	sub  L' periodcentered' L by Ldot;
} locl_latn_1;

script arab;
language URD;
lookup locl_arab_0 {
	sub six-persian by six-ar;
} locl_arab_0;
";
tag = locl;
},
{
automatic = 1;
code = "lookup ccmp_Other_1 {
	@CombiningTopAccents = [acutecomb brevecomb caroncomb circumflexcomb commaturnedabovecomb dieresiscomb dotaccentcomb gravecomb hungarumlautcomb macroncomb ringcomb tildecomb];
	lookupflag UseMarkFilteringSet @CombiningTopAccents;
	sub i' @CombiningTopAccents by idotless;
	sub j' @CombiningTopAccents by jdotless;
} ccmp_Other_1;

lookup ccmp_Other_2 {
	lookupflag 0;
	@Markscomb = [dieresiscomb dotaccentcomb gravecomb acutecomb hungarumlautcomb caroncomb.alt circumflexcomb caroncomb brevecomb ringcomb tildecomb macroncomb cedillacomb strokeshortcomb];
	@MarkscombCase = [dieresiscomb.case dotaccentcomb.case gravecomb.case acutecomb.case hungarumlautcomb.case caroncomb.alt.case circumflexcomb.case caroncomb.case brevecomb.case ringcomb.case tildecomb.case macroncomb.case cedillacomb.case strokeshortcomb.case];
	sub @Uppercase @Markscomb' by @MarkscombCase;
} ccmp_Other_2;

lookup ccmp_Other_3 {
	lookupflag 0;
	sub @MarkscombCase @Markscomb' by @MarkscombCase;
} ccmp_Other_3;

lookup ccmp_latn_1 {
	lookupflag 0;
	sub fi by f i;
	sub fl by f l;
} ccmp_latn_1;

script latn;
lookup ccmp_latn_1;
";
tag = ccmp;
},
{
code = "#lookup early {
 # Decompose early so that u-ar gets decomposed after that.
 # We do two step decomposition so that the comma above gets
 # attached to the waw not the high hamza.
 #sub uHamzaabove-ar							by highhamza-ar u-ar;
#} early;

 sub alefHamzaabove-ar						by alef-ar hamzaabove-ar;
 sub alefHamzabelow-ar						by alef-ar hamzabelow-ar;
 sub alefMadda-ar							by alef-ar madda-ar;
 sub alefWasla-ar							by alef-ar wasla-ar;
#sub alefWavyhamzaabove-ar					by alef-ar wavyhamzaabove-ar;
#sub alefWavyhamzabelow-ar					by alef-ar wavyhamzabelow-ar;
#sub alefTwoabove-ar						by alef-ar twoabove-ar;
#sub alefThreeabove-ar						by alef-ar threeabove-ar;
#sub alefFatha-ar							by alef-ar fathaattached-ar;
#sub alefRightFatha-ar						by alef-ar fathaattachedright-ar;
#sub alefRightMiddleStroke-ar				by alef-ar strokeright-ar;
#sub alefLeftMiddleStroke-ar				by alef-ar strokeleft-ar;
#sub alefKasra-ar							by alef-ar kasraattached-ar;
#sub alefRightKasra-ar						by alef-ar kasraattachedright-ar;
#sub alefRoundDotAbove-ar					by alef-ar rounddotattachedabove-ar;
#sub alefRightRoundDot-ar					by alef-ar rounddotattachedright-ar;
#sub alefLeftRoundDot-ar					by alef-ar rounddotattachedleft-ar;
#sub alefRoundDotBelow-ar					by alef-ar rounddotattachedbelow-ar;
#sub alefDotAbove-ar						by alef-ar dotabove-ar;
#sub alefRightFathaDotAbove-ar				by alef-ar fathaattachedright-ar dotabove-ar;
#sub alefRightMiddleStrokeDotAbove-ar		by alef-ar strokeright-ar dotabove-ar;
#sub alefRightKasraDotAbove-ar				by alef-ar kasraattachedright-ar dotabove-ar;
#sub alefRightFathaLeftRing-ar				by alef-ar fathaattachedright-ar ringattachedleft-ar;
#sub alefRightMiddleStrokeLeftRing-ar		by alef-ar strokeright-ar ringattachedleft-ar;
#sub alefRightKasraLeftRing-ar				by alef-ar kasraattachedright-ar ringattachedleft-ar;
#sub alefRightHamza-ar						by alef-ar hamzaattachedright-ar;
#sub alefLeftHamza-ar						by alef-ar hamzaattachedleft-ar;
 sub beh-ar									by behDotless-ar dotbelow-ar;
 sub teh-ar									by behDotless-ar twodotshorizontalabove-ar;
 sub tehVabove-ar							by behDotless-ar twodotshorizontalabove_vabove-ar;
 sub theh-ar								by behDotless-ar threedotsupabove-ar;
 sub peh-ar									by behDotless-ar threedotsdownbelow-ar;
 sub pehVabove-ar							by behDotless-ar vabove-ar threedotsdownbelow-ar;
 sub beeh-ar								by behDotless-ar twodotsverticalbelow-ar;
 sub beheh-ar								by behDotless-ar fourdotsbelow-ar;
 sub tehThreedotsdown-ar					by behDotless-ar threedotsdownabove-ar;
 sub tteh-ar								by behDotless-ar tahabove-ar;
 sub ttehVabove-ar							by behDotless-ar tahabove_vabove-ar;
 sub tteheh-ar								by behDotless-ar twodotsverticalabove-ar;
 sub teheh-ar								by behDotless-ar fourdotsabove-ar;
#sub behThreedotshorizontalbelow-ar			by behDotless-ar threedotshorizontalbelow-ar;
 sub behThreedotsupabove-ar					by behDotless-ar threedotsupabove-ar dotbelow-ar;
 sub behThreedotsupbelow-ar					by behDotless-ar threedotsupbelow-ar;
 sub tehThreedotsupbelow-ar					by behDotless-ar twodotshorizontalabove-ar threedotsupbelow-ar;
 sub behTwodotsbelowDotabove-ar				by behDotless-ar dotabove-ar twodotshorizontalbelow-ar;
 sub behVinvertedbelow-ar					by behDotless-ar vinvertedbelow-ar;
 sub behVabove-ar							by behDotless-ar vabove-ar;
 sub behVbelow-ar							by behDotless-ar vbelow-ar;
 sub behhamzaabove-ar						by behDotless-ar hamzaabove-ar dotbelow-ar;
#sub behMeemabove-ar						by behDotless-ar dotbelow-ar meemabove-ar;
#sub pehMeemabove-ar						by behDotless-ar threedotsdownbelow-ar meemabove-ar;
#sub tehTehabove-ar							by behDotless-ar tehabove-ar;
 sub tehRing-ar								by behDotless-ar twodotshorizontalabove-ar ringbelow-ar;
 sub jeem-ar								by hah-ar dotcenter-ar;
 sub khah-ar								by hah-ar dotabove-ar;
 sub tcheh-ar								by hah-ar threedotsdowncenter-ar;
 sub hahThreedotsabove-ar					by hah-ar threedotsupabove-ar;
 sub hahHamzaabove-ar						by hah-ar hamzaabove-ar;
 sub hahTwodotsverticalabove-ar				by hah-ar twodotsverticalabove-ar;
 sub hahTwodotshorizontalabove-ar			by hah-ar twodotshorizontalabove-ar;
 sub hahTahabove-ar							by hah-ar tahabove-ar;
 sub tcheheh-ar								by hah-ar fourdotscenter-ar;
 sub nyeh-ar								by hah-ar twodotshorizontalcenter-ar;
 sub dyeh-ar								by hah-ar twodotsverticalcenter-ar;
 sub hahThreedotsupbelow-ar					by hah-ar threedotsupcenter-ar;
 sub hahTahbelow-ar							by hah-ar tahcenter-ar;
 sub hahTahTwodotshorizontalbelow-ar		by hah-ar twodotshorizontalcenter_tahabove-ar;
#sub hahFourbelow-ar						by hah-ar fourcenter-ar;
 sub hahVinvertedbelow-ar					by hah-ar vinvertedcenter-ar;
 sub jeemThreedotsbelow-ar					by hah-ar dotcenter_threedotsdownbelow-ar;
 sub jeemTwodotsabove-ar					by hah-ar dotcenter-ar twodotshorizontalabove-ar;
 sub jeemThreedotsabove-ar					by hah-ar dotcenter-ar threedotsupabove-ar;
 sub tchehDotabove-ar						by hah-ar threedotsdowncenter-ar dotabove-ar;
 sub tchehVabove-ar							by hah-ar threedotsdowncenter-ar vabove-ar;
 sub thal-ar								by dal-ar dotabove-ar;
 sub ddal-ar								by dal-ar tahabove-ar;
 sub dahal-ar								by dal-ar twodotshorizontalabove-ar;
 sub ddahal-ar								by dal-ar twodotshorizontalbelow-ar;
 sub dul-ar									by dal-ar threedotsupabove-ar;
 sub dalRing-ar								by dal-ar ringbelow-ar;
 sub dalDotbelow-ar							by dal-ar dotbelow-ar;
 sub dalDotbelowTah-ar						by dal-ar tahabove-ar dotbelow-ar;
 sub dalThreedotsdown-ar					by dal-ar threedotsdownabove-ar;
 sub dalFourdots-ar							by dal-ar fourdotsabove-ar;
 sub dalVinvertedabove-ar					by dal-ar vinvertedabove-ar;
 sub dalTwodotsverticalbelowTah-ar			by dal-ar tahabove-ar twodotsverticalbelow-ar;
 sub dalVinvertedbelow-ar					by dal-ar vinvertedbelow-ar;
 sub dalThreedotsbelow-ar					by dal-ar threedotsdownbelow-ar;
 sub zain-ar								by reh-ar dotabove-ar;
 sub jeh-ar									by reh-ar threedotsupabove-ar;
 sub rreh-ar								by reh-ar tahabove-ar;
 sub rehv-ar								by reh-ar vabove-ar;
 sub rehRing-ar								by reh-ar ringbelow-ar;
 sub rehDotbelow-ar							by reh-ar dotbelow-ar;
 sub rehVbelow-ar							by reh-ar vbelow-ar;
 sub rehDotbelowdotabove-ar					by reh-ar dotcenter-ar dotbelow-ar;
 sub rehTwodots-ar							by reh-ar twodotshorizontalabove-ar;
 sub rehFourdots-ar							by reh-ar fourdotsabove-ar;
 sub rehVinvertedabove-ar					by reh-ar vinvertedabove-ar;
#sub rehStroke-ar							by reh-ar stroke-ar;
 sub rehTwodotsverticalabove-ar				by reh-ar twodotsverticalabove-ar;
 sub rehHamzaabove-ar						by reh-ar hamzaabove-ar;
 sub rehTwodotshorizontalaboveTahabove-ar	by reh-ar twodotshorizontalabove_tahabove-ar;
 sub zainVinvertedabove-ar					by reh-ar dotabove_vinvertedabove-ar;
#sub rehNoonabove-ar						by reh-ar noonabove-ar;
 sub sheen-ar								by seen-ar threedotsupabove-ar;
 sub seenDotbelowDotabove-ar				by seen-ar dotabove-ar dotbelow-ar;
 sub sheenDotbelow-ar						by seen-ar threedotsupabove-ar dotbelow-ar;
 sub sheenThreedotsbelow-ar					by seen-ar threedotsupabove-ar threedotsdownbelow-ar;
 sub seenFourdotsabove-ar					by seen-ar fourdotsabove-ar;
 sub seenTwodotsverticalabove-ar			by seen-ar twodotsverticalabove-ar;
 sub seenTahTwodotshorizontalabove-ar		by seen-ar twodotshorizontalabove_tahabove-ar;
#sub seenFourabove-ar						by seen-ar fourabove-ar;
 sub seenVinvertedabove-ar					by seen-ar vinvertedabove-ar;
 sub seenThreedotsbelow-ar					by seen-ar threedotsdownbelow-ar;
 sub dad-ar									by sad-ar dotabove-ar;
 sub dadDotbelow-ar							by sad-ar dotabove-ar dotbelow-ar;
 sub sadThreedots-ar						by sad-ar threedotsupabove-ar;
 sub sadTwodotsbelow-ar						by sad-ar twodotshorizontalbelow-ar;
 sub sadThreedotsbelow-ar					by sad-ar threedotsdownbelow-ar;
 sub zah-ar									by tah-ar dotabove-ar;
 sub tahThreedots-ar						by tah-ar threedotsupabove-ar;
 sub tahTwodotsabove-ar						by tah-ar twodotshorizontalabove-ar;
 sub tahDotbelow-ar							by tah-ar dotbelow-ar;
 sub tahThreedotsbelow-ar					by tah-ar threedotsdownbelow-ar;
 sub ghain-ar								by ain-ar dotabove-ar;
 sub ghainDotbelow-ar						by ain-ar dotabove-ar dotbelow-ar;
 sub ainThreedotsbelow-ar					by ain-ar threedotsdownbelow-ar;
 sub ainThreedots-ar						by ain-ar threedotsupabove-ar;
 sub ainTwodotshorizontalabove-ar			by ain-ar twodotshorizontalabove-ar;
 sub ainThreedotsdownabove-ar				by ain-ar threedotsdownabove-ar;
 sub ainTwodotsverticalabove-ar				by ain-ar twodotsverticalabove-ar;
 sub ghainThreedotsabove-ar					by ain-ar dotabove_threedotsupabove-ar;
 sub feh-ar									by fehDotless-ar dotabove-ar;
 sub veh-ar									by fehDotless-ar threedotsupabove-ar;
 sub fehDotmovedbelow-ar					by fehDotless-ar dotbelow-ar;
 sub fehDotbelow-ar							by fehDotless-ar dotabove-ar dotbelow-ar;
 sub fehThreedotsbelow-ar					by fehDotless-ar threedotsdownbelow-ar;
 sub peheh-ar								by fehDotless-ar fourdotsabove-ar;
 sub fehTwodotsbelow-ar						by fehDotless-ar twodotshorizontalbelow-ar;
 sub fehThreedotsupbelow-ar					by fehDotless-ar threedotsupbelow-ar;
 sub fehDotbelowThreedotsabove-ar			by fehDotless-ar threedotsupabove-ar dotbelow-ar;
 sub qaf-ar									by qafDotless-ar twodotshorizontalabove-ar;
 sub qafDotabove-ar							by qafDotless-ar dotabove-ar;
 sub qafThreedotsabove-ar					by qafDotless-ar threedotsupabove-ar;
 sub qafDotbelow-ar							by qafDotless-ar twodotshorizontalabove-ar dotbelow-ar;
 sub qafDotbelowNoDotAbove-ar				by qafDotless-ar dotbelow-ar;
 sub kafThreedotsbelow-ar					by kaf-ar threedotsdownbelow-ar;
 sub ng-ar									by kaf-ar threedotsupabove-ar;
 sub kafDotabove-ar							by kaf-ar dotabove-ar;
 sub kafTwodotshorizontalabove-ar			by kaf-ar twodotshorizontalabove-ar;
 sub kafDotbelow-ar							by kaf-ar dotbelow-ar;
 sub gaf-ar									by keheh-ar gafsarkashabove-ar;
 sub kafRing-ar								by keheh-ar ringbelow-ar;
 sub kehehDotabove-ar						by keheh-ar dotabove-ar;
 sub kehehTwodotshorizontalabove-ar			by keheh-ar twodotshorizontalabove-ar;
 sub kehehThreedotsabove-ar					by keheh-ar threedotsupabove-ar;
 sub kehehThreedotsupbelow-ar				by keheh-ar threedotsupbelow-ar;
 sub kehehThreedotsbelow-ar					by keheh-ar threedotsdownbelow-ar;
 sub kehehVabove-ar							by keheh-ar vabove-ar;
 sub kehehTwodotsverticalbelow-ar			by keheh-ar twodotsverticalbelow-ar;
 sub gafRing-ar								by keheh-ar gafsarkashabove-ar ringbelow-ar;
 sub gafThreedots-ar						by keheh-ar gafsarkashabove-ar threedotsupabove-ar;
 sub gafTwodotsbelow-ar						by keheh-ar gafsarkashabove-ar twodotshorizontalbelow-ar;
 sub ngoeh-ar								by keheh-ar gafsarkashabove-ar twodotshorizontalabove-ar;
 sub gueh-ar								by keheh-ar gafsarkashabove-ar twodotsverticalbelow-ar;
 sub gafInvertedstroke-ar					by keheh-ar gafsarkashcenter-ar;
#sub graf-ar								by keheh-ar grafsarkashabove-ar;
 sub lamVabove-ar							by lam-ar vabove-ar;
 sub lamDotabove-ar							by lam-ar dotabove-ar;
 sub lamThreedotsabove-ar					by lam-ar threedotsupabove-ar;
 sub lamThreedotsbelow-ar					by lam-ar threedotsdownbelow-ar;
#sub lamBar-ar								by lam-ar stroke-ar;
#sub lamDoublebar-ar						by lam-ar doublestroke-ar;
 sub lamTahabove-ar							by lam-ar tahabove-ar;
 sub meemDotabove-ar						by meem-ar dotabove-ar;
 sub meemDotbelow-ar						by meem-ar dotbelow-ar;
 sub meemThreedotsabove-ar					by meem-ar threedotsupabove-ar;
 sub noon-ar								by noonghunna-ar dotabove-ar;
 sub noonDotbelow-ar						by noonghunna-ar dotabove-ar dotbelow-ar;
 sub rnoon-ar								by noonghunna-ar tahabove-ar;
 sub noonRing-ar							by noonghunna-ar dotabove-ar ringbelow-ar;
 sub noonTwodotsbelow-ar					by noonghunna-ar dotabove-ar twodotshorizontalbelow-ar;
 sub noonTahabove-ar						by noonghunna-ar dotabove_tahabove-ar;
 sub noonVabove-ar							by noonghunna-ar dotabove_vabove-ar;
 sub noonVinvertedabove-ar					by noonghunna-ar vinvertedabove-ar;
 sub tehMarbuta-ar							by ae-ar twodotshorizontalabove-ar;
 sub hehHamzaabove-ar						by ae-ar hamzaabove-ar;
 sub hehgoalHamzaabove-ar					by hehgoal-ar hamzaabove-ar;
 sub tehMarbutagoal-ar						by hehgoal-ar twodotshorizontalabove-ar;
 sub hehVinvertedabove-ar					by hehDoachashmee-ar vinvertedabove-ar;
 sub wawHamzaabove-ar						by waw-ar hamzaabove-ar;
 sub wawring-ar								by waw-ar ringbelow-ar;
 sub wawTwodots-ar							by waw-ar twodotshorizontalabove-ar;
 sub wawDotabove-ar							by waw-ar dotabove-ar;
#sub kirghizoe-ar							by waw-ar stroke-ar;
 sub oe-ar									by waw-ar vabove-ar;
 sub u-ar									by waw-ar commaabove-ar;
 sub yu-ar									by waw-ar alefabove-ar;
 sub kirghizyu-ar							by waw-ar vinvertedabove-ar;
 sub ve-ar									by waw-ar threedotsupabove-ar;
#sub wawTwoabove-ar							by waw-ar twoabove-ar;
#sub wawThreeAbove-ar						by waw-ar threeabove-ar;
 sub wawDotcenter-ar						by waw-ar dotcenter-ar;
 sub yeh-ar									by alefMaksura-ar twodotshorizontalbelow-ar;
 sub yehHamzaabove-ar						by alefMaksura-ar hamzaabove-ar;
 sub yehKashmiri-ar							by alefMaksura-ar ring-ar;
 sub yehVabove-ar							by yehFarsi-ar vabove-ar;
 sub yehVinvertedFarsi-ar					by yehFarsi-ar vinvertedabove-ar;
 sub yehTwodotsaboveFarsi-ar				by yehFarsi-ar twodotshorizontalabove-ar;
 sub yehThreedotsaboveFarsi-ar				by yehFarsi-ar threedotsupabove-ar;
#sub yehTwoaboveFarsi-ar					by yehFarsi-ar twoabove-ar;
#sub yehThreeaboveFarsi-ar					by yehFarsi-ar threeabove-ar;
#sub yehFourbelowFarsi-ar					by alefMaksura-ar fourbelow-ar;
#sub yehTwodotsbelowNoonabove-ar			by alefMaksura-ar twodotshorizontalbelow-ar noonabove-ar;
 sub yehbarreeHamzaabove-ar					by yehbarree-ar hamzaabove-ar;
#sub yehbarreeTwoabove-ar					by yehbarree-ar twoabove-ar;
#sub yehbarreeThreeabove-ar					by yehbarree-ar threeabove-ar;
 sub e-ar									by alefMaksura-ar twodotsverticalbelow-ar;
#sub yehThreedotsbelow-ar					by alefMaksura-ar threedotsdownbelow-ar;
 sub yehTwodotsbelowHamzaabove-ar			by alefMaksura-ar twodotshorizontalbelow-ar hamzaabove-ar;
 sub yehTwodotsbelowDotabove-ar				by alefMaksura-ar twodotshorizontalbelow-ar dotabove-ar;
#sub kashidaTwodotsbelow-ar					by kashida-ar twodotshorizontalbelow-ar;
";
tag = ccmp;
},
{
code = " sub kaf-ar									by kafDotless-ar miniKeheh-ar;
 sub qafAfrican-ar							by qafDotless-ar;
 sub qafThreedotsaboveAfrican-ar			by qafAfrican-ar;
 sub noonThreedotsabove-ar					by noonghunna-ar threedotsupabove-ar;
 sub noonAfrican-ar							by noonghunna-ar;
 sub ae-ar									by hehgoal-ar;
 sub yehFarsi-ar							by alefMaksura-ar;
 sub yehTail-ar								by alefMaksura-ar tail-ar;

#sub highhamzaAlef-ar						by highhamza-ar alef-ar;
#sub highhamzaWaw-ar						by highhamza-ar waw-ar;
#sub highhamzaYeh-ar						by highhamza-ar alefMaksura-ar;
";
tag = isol;
},
{
code = " lookup center_marks;

 sub [behDotless-ar	noonghunna-ar alefMaksura-ar]
											by behDotless-ar.init;
 sub hah-ar									by hah-ar.init;
 sub seen-ar								by seen-ar.init;
 sub sad-ar									by sad-ar.init;
 sub tah-ar									by tah-ar.init;
 sub ain-ar									by ain-ar.init;
 sub [fehDotless-ar qafDotless-ar]			by fehDotless-ar.init;
 sub fehAfrican-ar							by fehDotless-ar.init dotbelow-ar;
 sub qafAfrican-ar							by fehDotless-ar.init dotabove-ar;
 sub qafThreedotsaboveAfrican-ar			by fehDotless-ar.init threedotsupabove-ar;
 sub [kaf-ar keheh-ar]						by kaf-ar.init;
 sub kafswash-ar							by kafswash-ar.init;
 sub lam-ar									by lam-ar.init;
 sub meem-ar								by meem-ar.init;
 sub noonThreedotsabove-ar					by behDotless-ar.init threedotsdownbelow-ar;
 sub noonAfrican-ar							by behDotless-ar.init dotabove-ar;
 sub [heh-ar hehDoachashmee-ar]				by heh-ar.init;
 sub hehgoal-ar								by behDotless-ar.init hehgoalMark-ar;
 sub yehFarsi-ar							by behDotless-ar.init twodotshorizontalbelow-ar;
 sub yehbarree-ar							by behDotless-ar.init twodotshorizontalbelow-ar;
#sub kashida-ar								by kashida-ar.init;

#sub highhamzaYeh-ar						by highhamza-ar behDotless-ar.init;
";
tag = init;
},
{
code = " lookup center_marks;

 sub [behDotless-ar	noonghunna-ar alefMaksura-ar]
											by behDotless-ar.medi;
 sub hah-ar									by hah-ar.medi;
 sub seen-ar								by seen-ar.medi;
 sub sad-ar									by sad-ar.medi;
 sub tah-ar									by tah-ar.medi;
 sub ain-ar									by ain-ar.medi;
 sub [fehDotless-ar qafDotless-ar]			by fehDotless-ar.medi;
 sub fehAfrican-ar							by fehDotless-ar.medi dotbelow-ar;
 sub qafAfrican-ar							by fehDotless-ar.medi dotabove-ar;
 sub qafThreedotsaboveAfrican-ar			by fehDotless-ar.medi threedotsupabove-ar;
 sub [kaf-ar keheh-ar]						by kaf-ar.medi;
 sub kafswash-ar							by kafswash-ar.medi;
 sub lam-ar									by lam-ar.medi;
 sub meem-ar								by meem-ar.medi;
 sub noonThreedotsabove-ar					by behDotless-ar.medi threedotsdownbelow-ar;
 sub noonAfrican-ar							by behDotless-ar.medi dotabove-ar;
 sub heh-ar									by heh-ar.medi;
 sub hehgoal-ar								by hehgoal-ar.medi;
 sub hehDoachashmee-ar						by hehDoachashmee-ar.medi;
 sub yehFarsi-ar							by behDotless-ar.medi twodotshorizontalbelow-ar;
 sub yehbarree-ar							by behDotless-ar.medi twodotshorizontalbelow-ar;
#sub yehthin-ar.init						by yehthin-ar.medi;
 
#sub highhamzaYeh-ar						by highhamza-ar alefMaksura-ar;
";
tag = medi;
},
{
code = " sub alef-ar								by alef-ar.fina;
 sub behDotless-ar							by behDotless-ar.fina;
 sub hah-ar									by hah-ar.fina;
 sub dal-ar									by dal-ar.fina;
 sub reh-ar									by reh-ar.fina;
#sub rehLoop-ar								by rehLoop-ar.fina;
 sub seen-ar								by seen-ar.fina;
 sub sad-ar									by sad-ar.fina;
 sub tah-ar									by tah-ar.fina;
 sub ain-ar									by ain-ar.fina;
 sub [fehDotless-ar fehAfrican-ar]			by fehDotless-ar.fina;
 sub [qafDotless-ar qafAfrican-ar]			by qafDotless-ar.fina;
 sub qafThreedotsaboveAfrican-ar			by qafDotless-ar.fina;
 sub kafDotless-ar							by kafDotless-ar.fina;
 sub kaf-ar									by kafDotless-ar.fina miniKeheh-ar;
 sub keheh-ar								by keheh-ar.fina;
 sub kafswash-ar							by kafswash-ar.fina;
 sub lam-ar									by lam-ar.fina;
 sub meem-ar								by meem-ar.fina;
 sub [noonghunna-ar noonAfrican-ar]			by noonghunna-ar.fina;
 sub noonThreedotsabove-ar					by noonghunna-ar.fina threedotsupabove-ar;
 sub heh-ar									by heh-ar.fina;
 sub hehgoal-ar								by hehgoal-ar.fina;
 sub hehDoachashmee-ar						by hehDoachashmee-ar.fina;
 sub ae-ar									by heh-ar.fina;
 sub waw-ar									by waw-ar.fina;
#sub wawStraight-ar							by wawStraight-ar.fina;
 sub [yehFarsi-ar alefMaksura-ar]			by alefMaksura-ar.fina;
 sub yehTail-ar								by alefMaksura-ar.fina tail-ar;
 sub yehbarreeHamzaabove-ar					by yehbarree-ar.fina hamzaabove-ar;
 sub yehbarree-ar							by yehbarree-ar.fina;
#sub yehRohingya-ar							by yehRohingya-ar.fina;

#sub highhamzaAlef-ar						by highhamza-ar alef-ar;
#sub highhamzaWaw-ar						by highhamza-ar waw-ar;
#sub uHamzaabove-ar							by highhamza-ar waw-ar commaabove-ar;
#sub highhamzaYeh-ar						by highhamza-ar alefMaksura-ar;
";
tag = fina;
},
{
code = "lookup isolated_heh {
  lookupflag IgnoreMarks;
    ignore
    sub @ArabicLetters heh-ar';
    sub heh-ar' by hehDoachashmee-ar;

    ignore
    sub heh-ar.init' kashida-ar' @ArabicLetters;
    sub heh-ar.init' kashida-ar' by hehDoachashmee-ar;
} isolated_heh;

lookup high_tooth {
 lookupflag IgnoreMarks;
 sub [behDotless-ar.init behDotless-ar.medi]'
     [seen-ar.medi seen-ar.fina]
  by [behDotless-ar.init.high behDotless-ar.medi.high];

 sub [behDotless-ar.init behDotless-ar.medi]
     [behDotless-ar.medi]'
     [behDotless-ar.medi behDotless-ar.fina
      seen-ar.medi seen-ar.fina]
  by  behDotless-ar.medi.high;

 ignore
 sub [seen-ar.init seen-ar.medi]
      behDotless-ar.medi'
     [behDotless-ar.medi behDotless-ar.fina]
     [behDotless-ar.medi behDotless-ar.fina seen-ar.medi seen-ar.fina];

 sub [seen-ar.init seen-ar.medi]
      behDotless-ar.medi'
     [behDotless-ar.medi behDotless-ar.fina]
  by  behDotless-ar.medi.high;
} high_tooth;

lookup lam_alef {
 lookupflag IgnoreMarks;
  sub lam-ar.init alef-ar.fina by lam_alef-ar;
  sub lam-ar.medi alef-ar.fina by lam_alef-ar.fina;
} lam_alef;

lookup short_alef {
 lookupflag UseMarkFilteringSet @marktop;
 sub [alef-ar alef-ar.fina]' @marktop by [alef-ar.short alef-ar.short.fina];
} short_alef;

lookup narrow_yehbarree {
 lookupflag UseMarkFilteringSet @markbottom;
  sub [seen-ar.init seen-ar.medi sad-ar.init sad-ar.medi tah-ar.init tah-ar.medi
       ain-ar.init ain-ar.medi fehDotless-ar.init fehDotless-ar.medi
       kaf-ar.init kaf-ar.medi kafswash-ar.init kafswash-ar.medi
       hah-ar.init hah-ar.medi meem-ar.init meem-ar.medi]
       yehbarree-ar.fina'
   by  yehbarree-ar.fina.narrow;
} narrow_yehbarree;

lookup hah_dots {
  lookupflag UseMarkFilteringSet @behdotbelow;
    sub behDotless-ar.init @behdotbelow' [hah-ar.medi hah-ar.fina] by @behdotbelow.alt;;
} hah_dots;
";
tag = rlig;
},
{
code = "lookup hah {
  lookupflag IgnoreMarks;
    sub lam-ar.init hah-ar.fina by lam_hah-ar;
    sub lam-ar.init hah-ar.medi by lam_hah-ar.init;
    sub behDotless-ar.init hah-ar.fina by behDotless_hah-ar;
    sub behDotless-ar.init hah-ar.medi by behDotless_hah-ar.init;
} hah;

lookup allah {
  lookupflag 0;
    sub alef-ar lam-ar.init lam-ar.medi shadda-ar alefabove-ar [heh-ar.fina hehgoal-ar.fina] by allah-ar;
    sub lam-ar.init lam-ar.medi shadda-ar alefabove-ar [heh-ar.fina hehgoal-ar.fina] by lellah-ar;
} allah;
";
tag = liga;
},
{
automatic = 1;
code = "sub zero by zero.subs;
sub one by one.subs;
sub two by two.subs;
sub three by three.subs;
sub four by four.subs;
sub five by five.subs;
sub six by six.subs;
sub seven by seven.subs;
sub eight by eight.subs;
sub nine by nine.subs;
";
tag = subs;
},
{
automatic = 1;
code = "sub zero by zero.subs;
sub one by one.subs;
sub two by two.subs;
sub three by three.subs;
sub four by four.subs;
sub five by five.subs;
sub six by six.subs;
sub seven by seven.subs;
sub eight by eight.subs;
sub nine by nine.subs;
";
tag = sinf;
},
{
automatic = 1;
code = "sub zero by zero.sups;
sub one by one.sups;
sub two by two.sups;
sub three by three.sups;
sub four by four.sups;
sub five by five.sups;
sub six by six.sups;
sub seven by seven.sups;
sub eight by eight.sups;
sub nine by nine.sups;
";
tag = sups;
},
{
automatic = 1;
code = "sub zero by zero.numr;
sub one by one.numr;
sub two by two.numr;
sub three by three.numr;
sub four by four.numr;
sub five by five.numr;
sub six by six.numr;
sub seven by seven.numr;
sub eight by eight.numr;
sub nine by nine.numr;
";
tag = numr;
},
{
automatic = 1;
code = "sub zero by zero.dnom;
sub one by one.dnom;
sub two by two.dnom;
sub three by three.dnom;
sub four by four.dnom;
sub five by five.dnom;
sub six by six.dnom;
sub seven by seven.dnom;
sub eight by eight.dnom;
sub nine by nine.dnom;
";
tag = dnom;
},
{
automatic = 1;
code = "lookup FRAC {
	sub slash by fraction;
} FRAC;
lookup UP {
	sub [zero one two three four five six seven eight nine] by [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
} UP;
lookup DOWN {
	sub fraction [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
	sub [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom] [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
} DOWN;
";
tag = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
sub N o period by numero;
";
tag = ordn;
},
{
automatic = 1;
code = "sub decimalseparator-ar.tf by decimalseparator-ar;
sub thousandseparator-ar.tf by thousandseparator-ar;
sub zero-persian.locl.tf by zero-persian.locl;
sub zero-persian.tf by zero-persian;
sub four-persian.locl.tf by four-persian.locl;
sub seven-persian.locl.tf by seven-persian.locl;
sub zero.tf by zero;
sub one.tf by one;
sub two.tf by two;
sub three.tf by three;
sub four.tf by four;
sub five.tf by five;
sub six.tf by six;
sub seven.tf by seven;
sub eight.tf by eight;
sub nine.tf by nine;
sub zero-ar.tf by zero-ar;
sub one-ar.tf by one-ar;
sub two-ar.tf by two-ar;
sub three-ar.tf by three-ar;
sub four-ar.tf by four-ar;
sub five-ar.tf by five-ar;
sub six-ar.tf by six-ar;
sub seven-ar.tf by seven-ar;
sub eight-ar.tf by eight-ar;
sub nine-ar.tf by nine-ar;
sub two-persian.tf by two-persian;
sub four-persian.tf by four-persian;
sub five-persian.tf by five-persian;
sub six-persian.tf by six-persian;
sub seven-persian.tf by seven-persian;
sub eight-persian.tf by eight-persian;
sub space.tf by space;
sub period.tf by period;
sub comma.tf by comma;
sub colon.tf by colon;
sub semicolon.tf by semicolon;
";
tag = pnum;
},
{
automatic = 1;
code = "sub decimalseparator-ar by decimalseparator-ar.tf;
sub thousandseparator-ar by thousandseparator-ar.tf;
sub zero-persian.locl by zero-persian.locl.tf;
sub zero-persian by zero-persian.tf;
sub four-persian.locl by four-persian.locl.tf;
sub seven-persian.locl by seven-persian.locl.tf;
sub zero by zero.tf;
sub one by one.tf;
sub two by two.tf;
sub three by three.tf;
sub four by four.tf;
sub five by five.tf;
sub six by six.tf;
sub seven by seven.tf;
sub eight by eight.tf;
sub nine by nine.tf;
sub zero-ar by zero-ar.tf;
sub one-ar by one-ar.tf;
sub two-ar by two-ar.tf;
sub three-ar by three-ar.tf;
sub four-ar by four-ar.tf;
sub five-ar by five-ar.tf;
sub six-ar by six-ar.tf;
sub seven-ar by seven-ar.tf;
sub eight-ar by eight-ar.tf;
sub nine-ar by nine-ar.tf;
sub two-persian by two-persian.tf;
sub four-persian by four-persian.tf;
sub five-persian by five-persian.tf;
sub six-persian by six-persian.tf;
sub seven-persian by seven-persian.tf;
sub eight-persian by eight-persian.tf;
sub space by space.tf;
sub period by period.tf;
sub comma by comma.tf;
sub colon by colon.tf;
sub semicolon by semicolon.tf;
";
tag = tnum;
},
{
automatic = 1;
code = "sub slash by slash.case;
sub backslash by backslash.case;
sub parenleft by parenleft.case;
sub parenright by parenright.case;
sub braceleft by braceleft.case;
sub bar by bar.case;
sub braceright by braceright.case;
sub bracketleft by bracketleft.case;
sub bracketright by bracketright.case;
sub hyphen by hyphen.case;
sub guillemetleft by guillemetleft.case;
sub guillemetright by guillemetright.case;
sub guilsinglleft by guilsinglleft.case;
sub guilsinglright by guilsinglright.case;
sub exclamdown by exclamdown.case;
sub questiondown by questiondown.case;
sub endash by endash.case;
sub emdash by emdash.case;
sub at by at.case;
sub dieresiscomb by dieresiscomb.case;
sub dotaccentcomb by dotaccentcomb.case;
sub gravecomb by gravecomb.case;
sub acutecomb by acutecomb.case;
sub hungarumlautcomb by hungarumlautcomb.case;
sub caroncomb.alt by caroncomb.alt.case;
sub circumflexcomb by circumflexcomb.case;
sub caroncomb by caroncomb.case;
sub brevecomb by brevecomb.case;
sub ringcomb by ringcomb.case;
sub tildecomb by tildecomb.case;
sub macroncomb by macroncomb.case;
sub cedillacomb by cedillacomb.case;
sub strokeshortcomb by strokeshortcomb.case;
";
tag = case;
},
{
automatic = 1;
code = "sub zero.tf by zero.tf.zero;
sub zero by zero.zero;
";
tag = zero;
},
{
automatic = 1;
code = "sub meem-ar by meem-ar.ss01;
sub meem-ar.fina by meem-ar.fina.ss01;
";
labels = (
{
language = ENG;
value = "Alternate meem";
}
);
tag = ss01;
},
{
automatic = 1;
code = "sub lam_alef-ar.fina by lam_alef-ar.fina.ss02;
";
labels = (
{
language = ENG;
value = "Alternate lam-alef";
}
);
tag = ss02;
},
{
automatic = 1;
code = "sub a by a.ss03;
sub aacute by aacute.ss03;
sub abreve by abreve.ss03;
sub acircumflex by acircumflex.ss03;
sub adieresis by adieresis.ss03;
sub agrave by agrave.ss03;
sub amacron by amacron.ss03;
sub aogonek by aogonek.ss03;
sub aring by aring.ss03;
sub atilde by atilde.ss03;
sub g by g.ss03;
sub gbreve by gbreve.ss03;
sub gcommaaccent by gcommaaccent.ss03;
sub gdotaccent by gdotaccent.ss03;
";
labels = (
{
language = ENG;
value = "Geometric a g";
}
);
tag = ss03;
},
{
automatic = 1;
code = "sub a by a.ss04;
sub aacute by aacute.ss04;
sub abreve by abreve.ss04;
sub acircumflex by acircumflex.ss04;
sub adieresis by adieresis.ss04;
sub agrave by agrave.ss04;
sub amacron by amacron.ss04;
sub aogonek by aogonek.ss04;
sub aring by aring.ss04;
sub atilde by atilde.ss04;
sub g by g.ss04;
sub gbreve by gbreve.ss04;
sub gcommaaccent by gcommaaccent.ss04;
sub gdotaccent by gdotaccent.ss04;
sub l by l.ss04;
sub lacute by lacute.ss04;
sub lcaron by lcaron.ss04;
sub lcommaaccent by lcommaaccent.ss04;
sub ldot by ldot.ss04;
sub lslash by lslash.ss04;
sub y by y.ss04;
sub yacute by yacute.ss04;
sub ycircumflex by ycircumflex.ss04;
sub ydieresis by ydieresis.ss04;
sub ygrave by ygrave.ss04;
";
labels = (
{
language = ENG;
value = "Tailed a g l y";
}
);
tag = ss04;
},
{
automatic = 1;
code = "sub six by six.ss05;
sub nine by nine.ss05;
sub six.tf by six.tf.ss05;
sub nine.tf by nine.tf.ss05;
";
labels = (
{
language = ENG;
value = "Alt numbers";
}
);
tag = ss05;
},
{
code = "# Automatic Code

lookup beh_dots_1 {
  lookupflag UseMarkFilteringSet [@behdotbelow @markbottom];
    ignore
    pos behDotless-ar.init @behdotbelow' [alef-ar.fina lam-ar.medi] @markbottom;
    pos behDotless-ar.init @behdotbelow' <DOTSHIFT> [alef-ar.fina lam-ar.medi];

    ignore
    pos behDotless-ar.init @behdotbelow' @markbottom [alef-ar.fina lam-ar.medi] @markbottom;
    pos behDotless-ar.init @behdotbelow' <DOTSHIFT> @markbottom [alef-ar.fina lam-ar.medi];
} beh_dots_1;

lookup beh_dots_2 {
  lookupflag UseMarkFilteringSet @behdotbelow;
    pos  behDotless-ar.init
         @behdotbelow' <DOTSHIFT>
        [kafDotless-ar.fina lam_alef-ar.fina lam_alef-ar.fina.ss02
         dal-ar.fina kaf-ar.medi keheh-ar.fina kafswash-ar.medi kafswash-ar.fina
         sad-ar.medi sad-ar.fina tah-ar.medi tah-ar.fina];
} beh_dots_2;
";
tag = mark;
}
);
fontMaster = (
{
axesValues = (
30
);
customParameters = (
{
name = "Master Icon Glyph Name";
value = "seen-ar.init";
}
);
guides = (
{
locked = 1;
pos = (0,428);
},
{
locked = 1;
pos = (0,1000);
},
{
locked = 1;
pos = (0,-420);
},
{
name = "MID CAPHEIGH 350";
pos = (-10,350);
},
{
name = "Diacritics top lc";
pos = (-25,722);
},
{
name = "Diacritics bott lc";
pos = (-25,587);
},
{
name = "Diacritics top UC";
pos = (-25,882);
},
{
name = "Diacritics bott UC";
pos = (-25,747);
}
);
iconName = Light;
id = "3114FB65-9464-41A5-B67E-A8F9F43C0EF1";
metricValues = (
{
pos = 720;
},
{
over = 8;
pos = 700;
},
{
over = 8;
pos = 492;
},
{
over = -8;
},
{
over = -8;
pos = -200;
},
{
}
);
name = ExtraLight;
numberValues = (
-87
);
userData = {
GSCornerRadius = 70;
GSOffsetHorizontal = 15;
GSOffsetKeepCompatible = 1;
GSOffsetMakeStroke = 1;
GSOffsetPosition = 1;
GSOffsetVertical = 15;
};
visible = 1;
},
{
axesValues = (
75
);
customParameters = (
{
name = "Master Icon Glyph Name";
value = "seen-ar.init";
}
);
guides = (
{
locked = 1;
pos = (0,428);
},
{
locked = 1;
pos = (0,1000);
},
{
locked = 1;
pos = (0,-420);
},
{
name = "MID CAPHEIGH 350";
pos = (-10,350);
},
{
name = "Diacritics top lc";
pos = (-25,726);
},
{
name = "Diacritics bott lc";
pos = (-25,581);
},
{
name = "Diacritics top UC";
pos = (-25,890);
},
{
name = "Diacritics bott UC";
pos = (-25,745);
},
{
pos = (131,-247);
}
);
id = "14EEE41F-D714-4243-A717-73445EE7DABA";
metricValues = (
{
pos = 720;
},
{
over = 12;
pos = 700;
},
{
over = 12;
pos = 500;
},
{
over = -12;
},
{
over = -12;
pos = -200;
},
{
}
);
name = Regular;
numberValues = (
-76
);
userData = {
GSCornerRadius = 80;
GSOffsetHorizontal = 37.5;
GSOffsetKeepCompatible = 1;
GSOffsetMakeStroke = 1;
GSOffsetPosition = 0.7;
GSOffsetVertical = 37.5;
};
visible = 1;
},
{
axesValues = (
135
);
customParameters = (
{
name = "Master Icon Glyph Name";
value = "seen-ar.init";
}
);
guides = (
{
locked = 1;
pos = (0,428);
},
{
name = "Diacritics top lc";
pos = (-25,717);
},
{
name = "Diacritics bott lc";
pos = (-25,572);
},
{
name = "Diacritics top UC";
pos = (-25,898);
},
{
name = "Diacritics bott UC";
pos = (-25,753);
},
{
name = "MID CAPHEIGH 350";
pos = (-7,350);
}
);
iconName = Bold;
id = "090CB6A0-BE7C-4D17-A551-206C7456A8A3";
metricValues = (
{
pos = 720;
},
{
over = 16;
pos = 700;
},
{
over = 16;
pos = 508;
},
{
over = -16;
},
{
over = -16;
pos = -200;
},
{
}
);
name = ExtraBold;
numberValues = (
-62
);
userData = {
GSCornerRadius = 120;
GSExtrudeAngle = 30;
GSExtrudeOffset = 15;
GSOffsetHorizontal = 67.5;
GSOffsetKeepCompatible = 1;
GSOffsetMakeStroke = 1;
GSOffsetPosition = 0.75;
GSOffsetVertical = 59.5;
};
visible = 1;
}
);
instances = (
{
axesValues = (
30
);
customParameters = (
{
name = "Instance Preview";
value = (
"yeh-farsi",
"dal-ar.fina",
"hah-ar.medi",
"behDotless-ar.init",
"alef-ar"
);
}
);
instanceInterpolations = {
"3114FB65-9464-41A5-B67E-A8F9F43C0EF1" = 1;
};
name = ExtraLight;
weightClass = 200;
},
{
axesValues = (
55
);
customParameters = (
{
name = "Instance Preview";
value = (
"yeh-farsi",
"dal-ar.fina",
"hah-ar.medi",
"behDotless-ar.init",
"alef-ar"
);
}
);
instanceInterpolations = {
"14EEE41F-D714-4243-A717-73445EE7DABA" = 0.55556;
"3114FB65-9464-41A5-B67E-A8F9F43C0EF1" = 0.44444;
};
name = Light;
weightClass = 300;
},
{
axesValues = (
75
);
customParameters = (
{
name = "Instance Preview";
value = (
"yeh-farsi",
"dal-ar.fina",
"hah-ar.medi",
"behDotless-ar.init",
"alef-ar"
);
}
);
instanceInterpolations = {
"14EEE41F-D714-4243-A717-73445EE7DABA" = 1;
};
name = Regular;
},
{
axesValues = (
85
);
customParameters = (
{
name = "Instance Preview";
value = (
"yeh-farsi",
"dal-ar.fina",
"hah-ar.medi",
"behDotless-ar.init",
"alef-ar"
);
}
);
instanceInterpolations = {
"090CB6A0-BE7C-4D17-A551-206C7456A8A3" = 0.16667;
"14EEE41F-D714-4243-A717-73445EE7DABA" = 0.83333;
};
name = Medium;
weightClass = 500;
},
{
axesValues = (
100
);
customParameters = (
{
name = "Instance Preview";
value = (
"yeh-farsi",
"dal-ar.fina",
"hah-ar.medi",
"behDotless-ar.init",
"alef-ar"
);
}
);
instanceInterpolations = {
"090CB6A0-BE7C-4D17-A551-206C7456A8A3" = 0.41667;
"14EEE41F-D714-4243-A717-73445EE7DABA" = 0.58333;
};
name = SemiBold;
weightClass = 600;
},
{
axesValues = (
115
);
customParameters = (
{
name = "Instance Preview";
value = (
"yeh-farsi",
"dal-ar.fina",
"hah-ar.medi",
"behDotless-ar.init",
"alef-ar"
);
}
);
instanceInterpolations = {
"090CB6A0-BE7C-4D17-A551-206C7456A8A3" = 0.66667;
"14EEE41F-D714-4243-A717-73445EE7DABA" = 0.33333;
};
isBold = 1;
name = Bold;
weightClass = 700;
},
{
axesValues = (
135
);
customParameters = (
{
name = "Instance Preview";
value = (
"yeh-farsi",
"dal-ar.fina",
"hah-ar.medi",
"behDotless-ar.init",
"alef-ar"
);
}
);
instanceInterpolations = {
"090CB6A0-BE7C-4D17-A551-206C7456A8A3" = 1;
};
linkStyle = Regular;
name = ExtraBold;
weightClass = 800;
},
{
customParameters = (
{
name = "Variable Font Origin";
value = "14EEE41F-D714-4243-A717-73445EE7DABA";
}
);
name = Regular;
type = variable;
}
);
kerningLTR = {
"3114FB65-9464-41A5-B67E-A8F9F43C0EF1" = {
"@MMK_L_A" = {
"@MMK_R_J" = -20;
"@MMK_R_O" = -30;
"@MMK_R_T" = -70;
"@MMK_R_U" = -20;
"@MMK_R_V" = -65;
"@MMK_R_W" = -35;
"@MMK_R_Y" = -60;
"@MMK_R_question" = -40;
"@MMK_R_quote" = -60;
"@MMK_R_v" = -30;
"@MMK_R_zero.subs" = 0;
"@MMK_R_zero.sups" = -80;
V = -70;
};
"@MMK_L_B" = {
"@MMK_R_Y" = -20;
};
"@MMK_L_C" = {
"@MMK_R_O" = -5;
"@MMK_R_comma" = -20;
"@MMK_R_parenright" = -30;
"@MMK_R_v" = -10;
};
"@MMK_L_F" = {
"@MMK_R_A" = -60;
"@MMK_R_O" = -10;
"@MMK_R_a" = -20;
"@MMK_R_comma" = -83;
"@MMK_R_g" = -20;
"@MMK_R_o" = -17;
"@MMK_R_s" = -30;
"@MMK_R_space" = -30;
"@MMK_R_t" = -20;
"@MMK_R_u" = -20;
"@MMK_R_v" = -20;
};
"@MMK_L_H" = {
"@MMK_R_A" = 0;
"@MMK_R_Y" = 0;
"@MMK_R_a" = -10;
"@MMK_R_comma" = 0;
"@MMK_R_g" = 0;
"@MMK_R_o" = 0;
"@MMK_R_u" = -4;
"@MMK_R_v" = -3;
};
"@MMK_L_K" = {
"@MMK_R_O" = -30;
"@MMK_R_S" = -20;
"@MMK_R_a" = -20;
"@MMK_R_dash" = -40;
"@MMK_R_o" = -22;
"@MMK_R_u" = -30;
"@MMK_R_v" = -40;
};
"@MMK_L_L" = {
"@MMK_R_O" = -31;
"@MMK_R_T" = -73;
"@MMK_R_U" = -20;
"@MMK_R_V" = -76;
"@MMK_R_W" = -50;
"@MMK_R_Y" = -64;
"@MMK_R_dash" = -50;
"@MMK_R_o" = -20;
"@MMK_R_question" = -50;
"@MMK_R_quote" = -120;
"@MMK_R_seven" = -30;
"@MMK_R_t" = -40;
"@MMK_R_u" = -20;
"@MMK_R_v" = -44;
"@MMK_R_zero.sups" = -130;
};
"@MMK_L_O" = {
"@MMK_R_A" = -30;
"@MMK_R_T" = -34;
"@MMK_R_V" = -15;
"@MMK_R_W" = -10;
"@MMK_R_X" = -13;
"@MMK_R_Y" = -19;
"@MMK_R_Z" = -21;
"@MMK_R_a" = -4;
"@MMK_R_comma" = -70;
"@MMK_R_parenright" = -30;
AE = -18;
};
"@MMK_L_P" = {
"@MMK_R_A" = -70;
"@MMK_R_J" = -130;
"@MMK_R_a" = -32;
"@MMK_R_comma" = -97;
"@MMK_R_g" = -60;
"@MMK_R_j" = -20;
"@MMK_R_l" = -20;
"@MMK_R_n" = -21;
"@MMK_R_o" = -36;
"@MMK_R_questioncase" = -40;
"@MMK_R_questiondown" = -70;
"@MMK_R_s" = -20;
"@MMK_R_space" = -30;
"@MMK_R_u" = -20;
"@MMK_R_zero.subs" = -100;
};
"@MMK_L_R" = {
"@MMK_R_O" = 0;
"@MMK_R_T" = -20;
"@MMK_R_U" = -7;
"@MMK_R_V" = 0;
"@MMK_R_Y" = 0;
"@MMK_R_a" = -20;
"@MMK_R_o" = -20;
"@MMK_R_v" = 0;
};
"@MMK_L_S" = {
"@MMK_R_T" = -40;
"@MMK_R_V" = -20;
"@MMK_R_W" = -10;
"@MMK_R_Y" = -20;
"@MMK_R_comma" = -20;
"@MMK_R_parenright" = -30;
"@MMK_R_t" = -20;
"@MMK_R_v" = -10;
};
"@MMK_L_T" = {
"@MMK_R_A" = -70;
"@MMK_R_J" = -80;
"@MMK_R_O" = -30;
"@MMK_R_a" = -112;
"@MMK_R_comma" = -80;
"@MMK_R_dash" = -60;
"@MMK_R_four" = -60;
"@MMK_R_g" = -100;
"@MMK_R_n" = -78;
"@MMK_R_o" = -95;
"@MMK_R_questioncase" = -60;
"@MMK_R_s" = -80;
"@MMK_R_space" = -30;
"@MMK_R_u" = -98;
"@MMK_R_v" = -40;
"@MMK_R_zero.subs" = -60;
};
"@MMK_L_U" = {
"@MMK_R_A" = -20;
"@MMK_R_Germandbls" = -5;
"@MMK_R_a" = -10;
"@MMK_R_comma" = -20;
"@MMK_R_g" = -10;
"@MMK_R_n" = -9;
"@MMK_R_o" = 0;
"@MMK_R_u" = -9;
};
"@MMK_L_V" = {
"@MMK_R_A" = 0;
"@MMK_R_J" = -80;
"@MMK_R_O" = -15;
"@MMK_R_S" = -30;
"@MMK_R_V" = 7;
"@MMK_R_a" = -65;
"@MMK_R_comma" = -80;
"@MMK_R_dash" = -30;
"@MMK_R_four" = -50;
"@MMK_R_g" = -70;
"@MMK_R_n" = -41;
"@MMK_R_o" = -70;
"@MMK_R_questioncase" = -30;
"@MMK_R_s" = -30;
"@MMK_R_space" = -30;
"@MMK_R_u" = -40;
"@MMK_R_v" = -45;
"@MMK_R_zero.subs" = -80;
A = -70;
};
"@MMK_L_W" = {
"@MMK_R_A" = -35;
"@MMK_R_J" = -70;
"@MMK_R_O" = -10;
"@MMK_R_S" = -20;
"@MMK_R_a" = -30;
"@MMK_R_comma" = -60;
"@MMK_R_g" = -60;
"@MMK_R_o" = -20;
"@MMK_R_questiondown" = -50;
"@MMK_R_zero.subs" = -40;
};
"@MMK_L_X" = {
"@MMK_R_O" = -10;
"@MMK_R_dash" = -30;
"@MMK_R_o" = 0;
"@MMK_R_v" = -20;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -60;
"@MMK_R_O" = -20;
"@MMK_R_S" = -20;
"@MMK_R_a" = -80;
"@MMK_R_comma" = -100;
"@MMK_R_dash" = -50;
"@MMK_R_four" = -40;
"@MMK_R_g" = -70;
"@MMK_R_n" = -60;
"@MMK_R_o" = -90;
"@MMK_R_questioncase" = -30;
"@MMK_R_questiondown" = -70;
"@MMK_R_s" = -50;
"@MMK_R_space" = -30;
"@MMK_R_u" = -76;
"@MMK_R_v" = -30;
"@MMK_R_zero.subs" = -80;
};
"@MMK_L_Z" = {
"@MMK_R_O" = -20;
"@MMK_R_dash" = -40;
"@MMK_R_o" = -16;
"@MMK_R_u" = -20;
"@MMK_R_v" = -20;
};
"@MMK_L_comma" = {
"@MMK_R_J" = -20;
"@MMK_R_O" = -70;
"@MMK_R_S" = -20;
"@MMK_R_T" = -80;
"@MMK_R_U" = -20;
"@MMK_R_V" = -80;
"@MMK_R_W" = -60;
"@MMK_R_Y" = -100;
"@MMK_R_four" = -10;
"@MMK_R_one" = -60;
"@MMK_R_quote" = -75;
"@MMK_R_seven" = -40;
"@MMK_R_v" = -70;
"@MMK_R_zero" = -20;
six = -30;
};
"@MMK_L_dash" = {
"@MMK_R_J" = -34;
"@MMK_R_T" = -60;
"@MMK_R_V" = -30;
"@MMK_R_X" = -30;
"@MMK_R_Y" = -50;
"@MMK_R_Z" = -30;
"@MMK_R_l" = -4;
"@MMK_R_n" = 0;
"@MMK_R_one" = -30;
"@MMK_R_seven" = -50;
"@MMK_R_x" = 0;
"@MMK_R_z" = 0;
};
"@MMK_L_f" = {
"@MMK_R_a" = -26;
"@MMK_R_comma" = -56;
"@MMK_R_f" = 22;
"@MMK_R_g" = -20;
"@MMK_R_o" = -22;
"@MMK_R_question" = 20;
"@MMK_R_v" = 17;
f = 15;
};
"@MMK_L_four" = {
"@MMK_R_comma" = -20;
"@MMK_R_ninegeom" = -20;
"@MMK_R_seven" = -20;
};
"@MMK_L_fraction" = {
"@MMK_R_zero.dnom" = -30;
"@MMK_R_zero.subs" = -50;
four.dnom = -90;
one.dnom = -80;
seven.dnom = -40;
two.dnom = -40;
};
"@MMK_L_g" = {
"@MMK_R_o" = -10;
"@MMK_R_question" = 20;
};
"@MMK_L_k" = {
"@MMK_R_a" = -10;
"@MMK_R_dash" = 0;
"@MMK_R_o" = -10;
};
"@MMK_L_l" = {
"@MMK_R_g" = -10;
};
"@MMK_L_n" = {
"@MMK_R_T" = -81;
"@MMK_R_V" = -70;
"@MMK_R_Y" = -50;
"@MMK_R_g" = -10;
"@MMK_R_l" = 10;
"@MMK_R_parenright" = -20;
"@MMK_R_question" = -20;
"@MMK_R_t" = -35;
"@MMK_R_v" = -20;
"@MMK_R_zero.sups" = -40;
};
"@MMK_L_ninegeom" = {
"@MMK_R_four" = -30;
"@MMK_R_seven" = -30;
"@MMK_R_sixgeom" = -20;
};
"@MMK_L_o" = {
"@MMK_R_T" = -93;
"@MMK_R_V" = -70;
"@MMK_R_W" = -20;
"@MMK_R_Y" = -90;
"@MMK_R_comma" = -10;
"@MMK_R_g" = -10;
"@MMK_R_n" = 0;
"@MMK_R_parenright" = -30;
"@MMK_R_question" = -30;
"@MMK_R_quote" = -20;
"@MMK_R_t" = -20;
"@MMK_R_v" = -20;
"@MMK_R_zero.sups" = -50;
};
"@MMK_L_parenleft" = {
"@MMK_R_O" = -30;
"@MMK_R_S" = -30;
"@MMK_R_a" = -20;
"@MMK_R_n" = -20;
"@MMK_R_o" = -30;
"@MMK_R_v" = -30;
};
"@MMK_L_question" = {
"@MMK_R_J" = -60;
};
"@MMK_L_questioncase" = {
"@MMK_R_T" = -90;
"@MMK_R_V" = -80;
"@MMK_R_W" = -50;
"@MMK_R_Y" = -70;
};
"@MMK_L_questiondown" = {
"@MMK_R_J" = -50;
"@MMK_R_O" = -60;
"@MMK_R_S" = -60;
"@MMK_R_U" = -50;
"@MMK_R_V" = -90;
"@MMK_R_W" = -60;
"@MMK_R_Y" = -100;
"@MMK_R_f" = -50;
"@MMK_R_o" = -60;
"@MMK_R_s" = -30;
"@MMK_R_t" = -50;
"@MMK_R_u" = -30;
"@MMK_R_v" = -50;
};
"@MMK_L_quote" = {
"@MMK_R_A" = -63;
"@MMK_R_J" = -120;
"@MMK_R_a" = -40;
"@MMK_R_comma" = -74;
"@MMK_R_o" = -20;
"@MMK_R_s" = -30;
};
"@MMK_L_r" = {
"@MMK_R_a" = -20;
"@MMK_R_comma" = -30;
"@MMK_R_dash" = 0;
"@MMK_R_g" = -30;
"@MMK_R_o" = -20;
"@MMK_R_space" = -30;
};
"@MMK_L_s" = {
"@MMK_R_T" = -80;
"@MMK_R_a" = 0;
"@MMK_R_g" = -10;
"@MMK_R_s" = -20;
"@MMK_R_t" = -20;
};
"@MMK_L_seven" = {
"@MMK_R_A" = -70;
"@MMK_R_comma" = -100;
"@MMK_R_dash" = -50;
"@MMK_R_four" = -80;
"@MMK_R_sixgeom" = -60;
"@MMK_R_two" = -30;
"@MMK_R_zero" = -30;
"@MMK_R_zero.subs" = -60;
};
"@MMK_L_sixgeom" = {
"@MMK_R_ninegeom" = -40;
"@MMK_R_one" = -40;
"@MMK_R_seven" = -70;
"@MMK_R_two" = -40;
};
"@MMK_L_space" = {
"@MMK_R_T" = -20;
"@MMK_R_V" = -30;
"@MMK_R_Y" = -30;
"@MMK_R_v" = -30;
};
"@MMK_L_t" = {
"@MMK_R_a" = -20;
"@MMK_R_o" = -20;
"@MMK_R_u" = -20;
};
"@MMK_L_two" = {
"@MMK_R_four" = -40;
"@MMK_R_seven" = -40;
"@MMK_R_sixgeom" = -30;
"@MMK_R_zero" = -20;
};
"@MMK_L_u" = {
"@MMK_R_T" = -70;
};
"@MMK_L_v" = {
"@MMK_R_T" = -40;
"@MMK_R_a" = -20;
"@MMK_R_comma" = -70;
"@MMK_R_g" = -40;
"@MMK_R_o" = -20;
"@MMK_R_parenright" = -30;
"@MMK_R_space" = -30;
"@MMK_R_zero.subs" = -50;
};
"@MMK_L_x" = {
"@MMK_R_dash" = 0;
"@MMK_R_o" = -10;
};
"@MMK_L_z" = {
"@MMK_R_dash" = 0;
};
"@MMK_L_zero" = {
"@MMK_R_A" = 0;
"@MMK_R_comma" = -40;
"@MMK_R_four" = 0;
"@MMK_R_ninegeom" = -30;
"@MMK_R_one" = 0;
"@MMK_R_seven" = -30;
"@MMK_R_two" = -30;
"@MMK_R_zero" = -20;
};
"@MMK_L_zero.numr" = {
"@MMK_R_fraction" = -30;
};
"@MMK_L_zero.subs" = {
"@MMK_R_A" = 0;
"@MMK_R_T" = -60;
"@MMK_R_V" = -80;
"@MMK_R_W" = -30;
"@MMK_R_Y" = -90;
"@MMK_R_fraction" = -50;
"@MMK_R_v" = -50;
};
"@MMK_L_zero.sups" = {
"@MMK_R_A" = -80;
"@MMK_R_J" = -130;
"@MMK_R_a" = -40;
"@MMK_R_o" = -50;
};
Germandbls = {
"@MMK_R_T" = -20;
};
"eight-ar" = {
"four-ar" = -20;
"seven-ar" = -110;
"six-ar" = -110;
};
"eight-persian" = {
"nine-ar" = -60;
"seven-persian.locl" = -60;
"zero-persian.locl" = -20;
};
"five-ar" = {
"six-ar" = -70;
};
"four-ar" = {
"seven-ar" = -30;
"six-ar" = -50;
"three-ar" = -30;
"two-ar" = -40;
};
"four-persian.locl" = {
"seven-persian.locl" = -110;
"zero-persian.locl" = -80;
};
one.numr = {
"@MMK_R_fraction" = -50;
};
quoteright = {
"@MMK_R_o" = -60;
};
"seven-ar" = {
"eight-ar" = -110;
};
"seven-persian" = {
"seven-persian.locl" = -40;
};
"seven-persian.locl" = {
"four-persian.locl" = -90;
"zero-persian.locl" = -50;
};
seven.numr = {
"@MMK_R_fraction" = -90;
};
"two-persian" = {
"zero-persian.locl" = -70;
};
"zero-persian.locl" = {
"eight-persian" = -20;
};
};
"14EEE41F-D714-4243-A717-73445EE7DABA" = {
"@MMK_L_A" = {
"@MMK_R_J" = -20;
"@MMK_R_O" = -30;
"@MMK_R_T" = -70;
"@MMK_R_U" = -20;
"@MMK_R_V" = -65;
"@MMK_R_W" = -35;
"@MMK_R_Y" = -60;
"@MMK_R_question" = -40;
"@MMK_R_quote" = -60;
"@MMK_R_v" = -30;
"@MMK_R_zero.subs" = 0;
"@MMK_R_zero.sups" = -80;
V = -70;
};
"@MMK_L_B" = {
"@MMK_R_Y" = -20;
};
"@MMK_L_C" = {
"@MMK_R_O" = -5;
"@MMK_R_comma" = -20;
"@MMK_R_parenright" = -30;
"@MMK_R_v" = -10;
};
"@MMK_L_F" = {
"@MMK_R_A" = -60;
"@MMK_R_O" = -10;
"@MMK_R_a" = -20;
"@MMK_R_comma" = -83;
"@MMK_R_g" = -20;
"@MMK_R_o" = -17;
"@MMK_R_s" = -30;
"@MMK_R_space" = -30;
"@MMK_R_t" = -20;
"@MMK_R_u" = -20;
"@MMK_R_v" = -20;
};
"@MMK_L_H" = {
"@MMK_R_A" = 0;
"@MMK_R_Y" = 0;
"@MMK_R_a" = -10;
"@MMK_R_comma" = 0;
"@MMK_R_g" = 0;
"@MMK_R_o" = 0;
"@MMK_R_u" = -4;
"@MMK_R_v" = -3;
};
"@MMK_L_K" = {
"@MMK_R_O" = -30;
"@MMK_R_S" = -20;
"@MMK_R_a" = -20;
"@MMK_R_dash" = -40;
"@MMK_R_o" = -22;
"@MMK_R_u" = -30;
"@MMK_R_v" = -40;
};
"@MMK_L_L" = {
"@MMK_R_O" = -31;
"@MMK_R_T" = -73;
"@MMK_R_U" = -20;
"@MMK_R_V" = -76;
"@MMK_R_W" = -50;
"@MMK_R_Y" = -64;
"@MMK_R_dash" = -50;
"@MMK_R_o" = -20;
"@MMK_R_question" = -50;
"@MMK_R_quote" = -120;
"@MMK_R_seven" = -30;
"@MMK_R_t" = -40;
"@MMK_R_u" = -20;
"@MMK_R_v" = -44;
"@MMK_R_zero.sups" = -130;
};
"@MMK_L_O" = {
"@MMK_R_A" = -30;
"@MMK_R_T" = -34;
"@MMK_R_V" = -15;
"@MMK_R_W" = -10;
"@MMK_R_X" = -13;
"@MMK_R_Y" = -19;
"@MMK_R_Z" = -21;
"@MMK_R_a" = -4;
"@MMK_R_comma" = -70;
"@MMK_R_parenright" = -30;
AE = -18;
};
"@MMK_L_P" = {
"@MMK_R_A" = -70;
"@MMK_R_J" = -130;
"@MMK_R_a" = -32;
"@MMK_R_comma" = -97;
"@MMK_R_g" = -60;
"@MMK_R_j" = -20;
"@MMK_R_l" = -20;
"@MMK_R_n" = -21;
"@MMK_R_o" = -36;
"@MMK_R_questioncase" = -40;
"@MMK_R_questiondown" = -70;
"@MMK_R_s" = -20;
"@MMK_R_space" = -30;
"@MMK_R_u" = -20;
"@MMK_R_zero.subs" = -100;
};
"@MMK_L_R" = {
"@MMK_R_O" = 0;
"@MMK_R_T" = -20;
"@MMK_R_U" = -7;
"@MMK_R_V" = 0;
"@MMK_R_Y" = 0;
"@MMK_R_a" = -20;
"@MMK_R_o" = -20;
"@MMK_R_v" = 0;
};
"@MMK_L_S" = {
"@MMK_R_T" = -40;
"@MMK_R_V" = -20;
"@MMK_R_W" = -10;
"@MMK_R_Y" = -20;
"@MMK_R_comma" = -20;
"@MMK_R_parenright" = -30;
"@MMK_R_t" = -20;
"@MMK_R_v" = -10;
};
"@MMK_L_T" = {
"@MMK_R_A" = -70;
"@MMK_R_J" = -80;
"@MMK_R_O" = -30;
"@MMK_R_a" = -112;
"@MMK_R_comma" = -80;
"@MMK_R_dash" = -60;
"@MMK_R_four" = -60;
"@MMK_R_g" = -100;
"@MMK_R_n" = -78;
"@MMK_R_o" = -95;
"@MMK_R_questioncase" = -60;
"@MMK_R_s" = -80;
"@MMK_R_space" = -30;
"@MMK_R_u" = -98;
"@MMK_R_v" = -40;
"@MMK_R_zero.subs" = -60;
};
"@MMK_L_U" = {
"@MMK_R_A" = -20;
"@MMK_R_Germandbls" = -5;
"@MMK_R_a" = -10;
"@MMK_R_comma" = -20;
"@MMK_R_g" = -10;
"@MMK_R_n" = -9;
"@MMK_R_o" = 0;
"@MMK_R_u" = -9;
};
"@MMK_L_V" = {
"@MMK_R_A" = 0;
"@MMK_R_J" = -80;
"@MMK_R_O" = -15;
"@MMK_R_S" = -30;
"@MMK_R_V" = 7;
"@MMK_R_a" = -65;
"@MMK_R_comma" = -80;
"@MMK_R_dash" = -30;
"@MMK_R_four" = -50;
"@MMK_R_g" = -70;
"@MMK_R_n" = -41;
"@MMK_R_o" = -70;
"@MMK_R_questioncase" = -30;
"@MMK_R_s" = -30;
"@MMK_R_space" = -30;
"@MMK_R_u" = -40;
"@MMK_R_v" = -45;
"@MMK_R_zero.subs" = -80;
A = -70;
};
"@MMK_L_W" = {
"@MMK_R_A" = -35;
"@MMK_R_J" = -70;
"@MMK_R_O" = -10;
"@MMK_R_S" = -20;
"@MMK_R_a" = -30;
"@MMK_R_comma" = -60;
"@MMK_R_g" = -60;
"@MMK_R_o" = -20;
"@MMK_R_questiondown" = -50;
"@MMK_R_zero.subs" = -40;
};
"@MMK_L_X" = {
"@MMK_R_O" = -10;
"@MMK_R_dash" = -30;
"@MMK_R_o" = 0;
"@MMK_R_v" = -20;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -60;
"@MMK_R_O" = -20;
"@MMK_R_S" = -20;
"@MMK_R_a" = -80;
"@MMK_R_comma" = -100;
"@MMK_R_dash" = -50;
"@MMK_R_four" = -40;
"@MMK_R_g" = -70;
"@MMK_R_n" = -60;
"@MMK_R_o" = -90;
"@MMK_R_questioncase" = -30;
"@MMK_R_questiondown" = -70;
"@MMK_R_s" = -50;
"@MMK_R_space" = -30;
"@MMK_R_u" = -76;
"@MMK_R_v" = -30;
"@MMK_R_zero.subs" = -80;
};
"@MMK_L_Z" = {
"@MMK_R_O" = -20;
"@MMK_R_dash" = -40;
"@MMK_R_o" = -16;
"@MMK_R_u" = -20;
"@MMK_R_v" = -20;
};
"@MMK_L_comma" = {
"@MMK_R_J" = -20;
"@MMK_R_O" = -70;
"@MMK_R_S" = -20;
"@MMK_R_T" = -80;
"@MMK_R_U" = -20;
"@MMK_R_V" = -80;
"@MMK_R_W" = -60;
"@MMK_R_Y" = -100;
"@MMK_R_four" = -10;
"@MMK_R_one" = -60;
"@MMK_R_quote" = -75;
"@MMK_R_seven" = -40;
"@MMK_R_v" = -70;
"@MMK_R_zero" = -20;
six = -30;
};
"@MMK_L_dash" = {
"@MMK_R_J" = -34;
"@MMK_R_T" = -60;
"@MMK_R_V" = -30;
"@MMK_R_X" = -30;
"@MMK_R_Y" = -50;
"@MMK_R_Z" = -30;
"@MMK_R_l" = -4;
"@MMK_R_n" = 0;
"@MMK_R_one" = -30;
"@MMK_R_seven" = -50;
"@MMK_R_x" = 0;
"@MMK_R_z" = 0;
};
"@MMK_L_f" = {
"@MMK_R_a" = -26;
"@MMK_R_comma" = -56;
"@MMK_R_f" = 22;
"@MMK_R_g" = -20;
"@MMK_R_o" = -22;
"@MMK_R_question" = 20;
"@MMK_R_v" = 17;
f = 15;
};
"@MMK_L_four" = {
"@MMK_R_comma" = -20;
"@MMK_R_ninegeom" = -20;
"@MMK_R_seven" = -20;
};
"@MMK_L_fraction" = {
"@MMK_R_zero.dnom" = -30;
"@MMK_R_zero.subs" = -50;
four.dnom = -90;
one.dnom = -80;
seven.dnom = -40;
two.dnom = -40;
};
"@MMK_L_g" = {
"@MMK_R_o" = -10;
"@MMK_R_question" = 20;
};
"@MMK_L_k" = {
"@MMK_R_a" = -10;
"@MMK_R_dash" = 0;
"@MMK_R_o" = -10;
};
"@MMK_L_l" = {
"@MMK_R_g" = -10;
};
"@MMK_L_n" = {
"@MMK_R_T" = -81;
"@MMK_R_V" = -70;
"@MMK_R_Y" = -50;
"@MMK_R_g" = -10;
"@MMK_R_l" = 10;
"@MMK_R_parenright" = -20;
"@MMK_R_question" = -20;
"@MMK_R_t" = -35;
"@MMK_R_v" = -20;
"@MMK_R_zero.sups" = -40;
};
"@MMK_L_ninegeom" = {
"@MMK_R_four" = -30;
"@MMK_R_seven" = -30;
"@MMK_R_sixgeom" = -20;
};
"@MMK_L_o" = {
"@MMK_R_T" = -93;
"@MMK_R_V" = -70;
"@MMK_R_W" = -20;
"@MMK_R_Y" = -90;
"@MMK_R_comma" = -10;
"@MMK_R_g" = -10;
"@MMK_R_n" = 0;
"@MMK_R_parenright" = -30;
"@MMK_R_question" = -30;
"@MMK_R_quote" = -20;
"@MMK_R_t" = -20;
"@MMK_R_v" = -20;
"@MMK_R_zero.sups" = -50;
};
"@MMK_L_parenleft" = {
"@MMK_R_O" = -30;
"@MMK_R_S" = -30;
"@MMK_R_a" = -20;
"@MMK_R_n" = -20;
"@MMK_R_o" = -30;
"@MMK_R_v" = -30;
};
"@MMK_L_question" = {
"@MMK_R_J" = -60;
};
"@MMK_L_questioncase" = {
"@MMK_R_T" = -90;
"@MMK_R_V" = -80;
"@MMK_R_W" = -50;
"@MMK_R_Y" = -70;
};
"@MMK_L_questiondown" = {
"@MMK_R_J" = -50;
"@MMK_R_O" = -60;
"@MMK_R_S" = -60;
"@MMK_R_U" = -50;
"@MMK_R_V" = -90;
"@MMK_R_W" = -60;
"@MMK_R_Y" = -100;
"@MMK_R_f" = -50;
"@MMK_R_o" = -60;
"@MMK_R_s" = -30;
"@MMK_R_t" = -50;
"@MMK_R_u" = -30;
"@MMK_R_v" = -50;
};
"@MMK_L_quote" = {
"@MMK_R_A" = -63;
"@MMK_R_J" = -120;
"@MMK_R_a" = -40;
"@MMK_R_comma" = -74;
"@MMK_R_o" = -20;
"@MMK_R_s" = -30;
};
"@MMK_L_r" = {
"@MMK_R_a" = -20;
"@MMK_R_comma" = -30;
"@MMK_R_dash" = 0;
"@MMK_R_g" = -30;
"@MMK_R_o" = -20;
"@MMK_R_space" = -30;
};
"@MMK_L_s" = {
"@MMK_R_T" = -80;
"@MMK_R_a" = 0;
"@MMK_R_g" = -10;
"@MMK_R_s" = -20;
"@MMK_R_t" = -20;
};
"@MMK_L_seven" = {
"@MMK_R_A" = -70;
"@MMK_R_comma" = -100;
"@MMK_R_dash" = -50;
"@MMK_R_four" = -80;
"@MMK_R_sixgeom" = -60;
"@MMK_R_two" = -30;
"@MMK_R_zero" = -30;
"@MMK_R_zero.subs" = -60;
};
"@MMK_L_sixgeom" = {
"@MMK_R_ninegeom" = -40;
"@MMK_R_one" = -40;
"@MMK_R_seven" = -70;
"@MMK_R_two" = -40;
};
"@MMK_L_space" = {
"@MMK_R_T" = -20;
"@MMK_R_V" = -30;
"@MMK_R_Y" = -30;
"@MMK_R_v" = -30;
};
"@MMK_L_t" = {
"@MMK_R_a" = -20;
"@MMK_R_o" = -20;
"@MMK_R_u" = -20;
};
"@MMK_L_two" = {
"@MMK_R_four" = -40;
"@MMK_R_seven" = -40;
"@MMK_R_sixgeom" = -30;
"@MMK_R_zero" = -20;
};
"@MMK_L_u" = {
"@MMK_R_T" = -70;
};
"@MMK_L_v" = {
"@MMK_R_T" = -40;
"@MMK_R_a" = -20;
"@MMK_R_comma" = -70;
"@MMK_R_g" = -40;
"@MMK_R_o" = -20;
"@MMK_R_parenright" = -30;
"@MMK_R_space" = -30;
"@MMK_R_zero.subs" = -50;
};
"@MMK_L_x" = {
"@MMK_R_dash" = 0;
"@MMK_R_o" = -10;
};
"@MMK_L_z" = {
"@MMK_R_dash" = 0;
};
"@MMK_L_zero" = {
"@MMK_R_A" = 0;
"@MMK_R_comma" = -40;
"@MMK_R_four" = 0;
"@MMK_R_ninegeom" = -30;
"@MMK_R_one" = 0;
"@MMK_R_seven" = -30;
"@MMK_R_two" = -30;
"@MMK_R_zero" = -20;
};
"@MMK_L_zero.numr" = {
"@MMK_R_fraction" = -30;
};
"@MMK_L_zero.subs" = {
"@MMK_R_A" = 0;
"@MMK_R_T" = -60;
"@MMK_R_V" = -80;
"@MMK_R_W" = -30;
"@MMK_R_Y" = -90;
"@MMK_R_fraction" = -50;
"@MMK_R_v" = -50;
};
"@MMK_L_zero.sups" = {
"@MMK_R_A" = -80;
"@MMK_R_J" = -130;
"@MMK_R_a" = -40;
"@MMK_R_o" = -50;
};
Germandbls = {
"@MMK_R_T" = -20;
};
"eight-ar" = {
"four-ar" = -20;
"seven-ar" = -100;
"six-ar" = -100;
};
"eight-persian" = {
"nine-ar" = -50;
"seven-persian.locl" = -50;
"zero-persian.locl" = -20;
};
"five-ar" = {
"six-ar" = -80;
};
"four-ar" = {
"seven-ar" = -30;
"six-ar" = -30;
"three-ar" = -30;
"two-ar" = -40;
};
"four-persian.locl" = {
"seven-persian.locl" = -80;
"zero-persian.locl" = -70;
};
one.numr = {
"@MMK_R_fraction" = -50;
};
quoteright = {
"@MMK_R_o" = -60;
};
"seven-ar" = {
"eight-ar" = -100;
};
"seven-persian" = {
"seven-persian.locl" = -40;
};
"seven-persian.locl" = {
"four-persian.locl" = -80;
"zero-persian.locl" = -60;
};
seven.numr = {
"@MMK_R_fraction" = -90;
};
"two-persian" = {
"zero-persian.locl" = -50;
};
"zero-persian.locl" = {
"eight-persian" = -20;
};
};
"090CB6A0-BE7C-4D17-A551-206C7456A8A3" = {
"@MMK_L_A" = {
"@MMK_R_J" = -20;
"@MMK_R_O" = -30;
"@MMK_R_T" = -70;
"@MMK_R_U" = -20;
"@MMK_R_V" = -65;
"@MMK_R_W" = -35;
"@MMK_R_Y" = -60;
"@MMK_R_question" = -40;
"@MMK_R_quote" = -60;
"@MMK_R_v" = -30;
"@MMK_R_zero.subs" = 0;
"@MMK_R_zero.sups" = -80;
V = -70;
};
"@MMK_L_B" = {
"@MMK_R_Y" = -20;
};
"@MMK_L_C" = {
"@MMK_R_O" = -5;
"@MMK_R_comma" = -20;
"@MMK_R_parenright" = -30;
"@MMK_R_v" = -10;
};
"@MMK_L_F" = {
"@MMK_R_A" = -60;
"@MMK_R_O" = -10;
"@MMK_R_a" = -20;
"@MMK_R_comma" = -83;
"@MMK_R_g" = -20;
"@MMK_R_o" = -17;
"@MMK_R_s" = -30;
"@MMK_R_space" = -30;
"@MMK_R_t" = -20;
"@MMK_R_u" = -20;
"@MMK_R_v" = -20;
};
"@MMK_L_H" = {
"@MMK_R_A" = 0;
"@MMK_R_Y" = 0;
"@MMK_R_a" = -10;
"@MMK_R_comma" = 0;
"@MMK_R_g" = 0;
"@MMK_R_o" = 0;
"@MMK_R_u" = -4;
"@MMK_R_v" = -3;
};
"@MMK_L_K" = {
"@MMK_R_O" = -30;
"@MMK_R_S" = -20;
"@MMK_R_a" = -20;
"@MMK_R_dash" = -40;
"@MMK_R_o" = -22;
"@MMK_R_u" = -30;
"@MMK_R_v" = -40;
};
"@MMK_L_L" = {
"@MMK_R_O" = -31;
"@MMK_R_T" = -73;
"@MMK_R_U" = -20;
"@MMK_R_V" = -76;
"@MMK_R_W" = -50;
"@MMK_R_Y" = -64;
"@MMK_R_dash" = -50;
"@MMK_R_o" = -20;
"@MMK_R_question" = -50;
"@MMK_R_quote" = -120;
"@MMK_R_seven" = -30;
"@MMK_R_t" = -40;
"@MMK_R_u" = -20;
"@MMK_R_v" = -44;
"@MMK_R_zero.sups" = -130;
};
"@MMK_L_O" = {
"@MMK_R_A" = -30;
"@MMK_R_T" = -34;
"@MMK_R_V" = -15;
"@MMK_R_W" = -10;
"@MMK_R_X" = -13;
"@MMK_R_Y" = -19;
"@MMK_R_Z" = -21;
"@MMK_R_a" = -4;
"@MMK_R_comma" = -70;
"@MMK_R_parenright" = -30;
AE = -18;
};
"@MMK_L_P" = {
"@MMK_R_A" = -70;
"@MMK_R_J" = -130;
"@MMK_R_a" = -32;
"@MMK_R_comma" = -97;
"@MMK_R_g" = -60;
"@MMK_R_j" = -20;
"@MMK_R_l" = -20;
"@MMK_R_n" = -21;
"@MMK_R_o" = -36;
"@MMK_R_questioncase" = -40;
"@MMK_R_questiondown" = -70;
"@MMK_R_s" = -20;
"@MMK_R_space" = -30;
"@MMK_R_u" = -20;
"@MMK_R_zero.subs" = -100;
};
"@MMK_L_R" = {
"@MMK_R_O" = 0;
"@MMK_R_T" = -20;
"@MMK_R_U" = -7;
"@MMK_R_V" = 0;
"@MMK_R_Y" = 0;
"@MMK_R_a" = -20;
"@MMK_R_o" = -20;
"@MMK_R_v" = 0;
};
"@MMK_L_S" = {
"@MMK_R_T" = -40;
"@MMK_R_V" = -20;
"@MMK_R_W" = -10;
"@MMK_R_Y" = -20;
"@MMK_R_comma" = -20;
"@MMK_R_parenright" = -30;
"@MMK_R_t" = -20;
"@MMK_R_v" = -10;
};
"@MMK_L_T" = {
"@MMK_R_A" = -70;
"@MMK_R_J" = -80;
"@MMK_R_O" = -30;
"@MMK_R_a" = -112;
"@MMK_R_comma" = -80;
"@MMK_R_dash" = -60;
"@MMK_R_four" = -60;
"@MMK_R_g" = -100;
"@MMK_R_n" = -78;
"@MMK_R_o" = -95;
"@MMK_R_questioncase" = -60;
"@MMK_R_s" = -80;
"@MMK_R_space" = -30;
"@MMK_R_u" = -98;
"@MMK_R_v" = -40;
"@MMK_R_zero.subs" = -60;
};
"@MMK_L_U" = {
"@MMK_R_A" = -20;
"@MMK_R_Germandbls" = -5;
"@MMK_R_a" = -10;
"@MMK_R_comma" = -20;
"@MMK_R_g" = -10;
"@MMK_R_n" = -9;
"@MMK_R_o" = 0;
"@MMK_R_u" = -9;
};
"@MMK_L_V" = {
"@MMK_R_A" = 0;
"@MMK_R_J" = -80;
"@MMK_R_O" = -15;
"@MMK_R_S" = -30;
"@MMK_R_V" = 7;
"@MMK_R_a" = -65;
"@MMK_R_comma" = -80;
"@MMK_R_dash" = -30;
"@MMK_R_four" = -50;
"@MMK_R_g" = -70;
"@MMK_R_n" = -41;
"@MMK_R_o" = -70;
"@MMK_R_questioncase" = -30;
"@MMK_R_s" = -30;
"@MMK_R_space" = -30;
"@MMK_R_u" = -40;
"@MMK_R_v" = -45;
"@MMK_R_zero.subs" = -80;
A = -70;
};
"@MMK_L_W" = {
"@MMK_R_A" = -35;
"@MMK_R_J" = -70;
"@MMK_R_O" = -10;
"@MMK_R_S" = -20;
"@MMK_R_a" = -30;
"@MMK_R_comma" = -60;
"@MMK_R_g" = -60;
"@MMK_R_o" = -20;
"@MMK_R_questiondown" = -50;
"@MMK_R_zero.subs" = -40;
};
"@MMK_L_X" = {
"@MMK_R_O" = -10;
"@MMK_R_dash" = -30;
"@MMK_R_o" = 0;
"@MMK_R_v" = -20;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -60;
"@MMK_R_O" = -20;
"@MMK_R_S" = -20;
"@MMK_R_a" = -80;
"@MMK_R_comma" = -100;
"@MMK_R_dash" = -50;
"@MMK_R_four" = -40;
"@MMK_R_g" = -70;
"@MMK_R_n" = -60;
"@MMK_R_o" = -90;
"@MMK_R_questioncase" = -30;
"@MMK_R_questiondown" = -70;
"@MMK_R_s" = -50;
"@MMK_R_space" = -30;
"@MMK_R_u" = -76;
"@MMK_R_v" = -30;
"@MMK_R_zero.subs" = -80;
};
"@MMK_L_Z" = {
"@MMK_R_O" = -20;
"@MMK_R_dash" = -40;
"@MMK_R_o" = -16;
"@MMK_R_u" = -20;
"@MMK_R_v" = -20;
};
"@MMK_L_comma" = {
"@MMK_R_J" = -20;
"@MMK_R_O" = -70;
"@MMK_R_S" = -20;
"@MMK_R_T" = -80;
"@MMK_R_U" = -20;
"@MMK_R_V" = -80;
"@MMK_R_W" = -60;
"@MMK_R_Y" = -100;
"@MMK_R_four" = -10;
"@MMK_R_one" = -60;
"@MMK_R_quote" = -75;
"@MMK_R_seven" = -40;
"@MMK_R_v" = -70;
"@MMK_R_zero" = -20;
six = -30;
};
"@MMK_L_dash" = {
"@MMK_R_J" = -34;
"@MMK_R_T" = -60;
"@MMK_R_V" = -30;
"@MMK_R_X" = -30;
"@MMK_R_Y" = -50;
"@MMK_R_Z" = -30;
"@MMK_R_l" = -4;
"@MMK_R_n" = 0;
"@MMK_R_one" = -30;
"@MMK_R_seven" = -50;
"@MMK_R_x" = 0;
"@MMK_R_z" = 0;
};
"@MMK_L_f" = {
"@MMK_R_a" = -26;
"@MMK_R_comma" = -56;
"@MMK_R_f" = 22;
"@MMK_R_g" = -20;
"@MMK_R_o" = -22;
"@MMK_R_question" = 20;
"@MMK_R_v" = 17;
f = 15;
};
"@MMK_L_four" = {
"@MMK_R_comma" = -20;
"@MMK_R_ninegeom" = -20;
"@MMK_R_seven" = -20;
};
"@MMK_L_fraction" = {
"@MMK_R_zero.dnom" = -30;
"@MMK_R_zero.subs" = -50;
four.dnom = -90;
one.dnom = -80;
seven.dnom = -40;
two.dnom = -40;
};
"@MMK_L_g" = {
"@MMK_R_o" = -10;
"@MMK_R_question" = 20;
};
"@MMK_L_k" = {
"@MMK_R_a" = -10;
"@MMK_R_dash" = 0;
"@MMK_R_o" = -10;
};
"@MMK_L_l" = {
"@MMK_R_g" = -10;
};
"@MMK_L_n" = {
"@MMK_R_T" = -81;
"@MMK_R_V" = -70;
"@MMK_R_Y" = -50;
"@MMK_R_g" = -10;
"@MMK_R_l" = 10;
"@MMK_R_parenright" = -20;
"@MMK_R_question" = -20;
"@MMK_R_t" = -35;
"@MMK_R_v" = -20;
"@MMK_R_zero.sups" = -40;
};
"@MMK_L_ninegeom" = {
"@MMK_R_four" = -30;
"@MMK_R_seven" = -30;
"@MMK_R_sixgeom" = -20;
};
"@MMK_L_o" = {
"@MMK_R_T" = -93;
"@MMK_R_V" = -70;
"@MMK_R_W" = -20;
"@MMK_R_Y" = -90;
"@MMK_R_comma" = -10;
"@MMK_R_g" = -10;
"@MMK_R_n" = 0;
"@MMK_R_parenright" = -30;
"@MMK_R_question" = -30;
"@MMK_R_quote" = -20;
"@MMK_R_t" = -20;
"@MMK_R_v" = -20;
"@MMK_R_zero.sups" = -50;
};
"@MMK_L_parenleft" = {
"@MMK_R_O" = -30;
"@MMK_R_S" = -30;
"@MMK_R_a" = -20;
"@MMK_R_n" = -20;
"@MMK_R_o" = -30;
"@MMK_R_v" = -30;
};
"@MMK_L_question" = {
"@MMK_R_J" = -60;
};
"@MMK_L_questioncase" = {
"@MMK_R_T" = -90;
"@MMK_R_V" = -80;
"@MMK_R_W" = -50;
"@MMK_R_Y" = -70;
};
"@MMK_L_questiondown" = {
"@MMK_R_J" = -50;
"@MMK_R_O" = -60;
"@MMK_R_S" = -60;
"@MMK_R_U" = -50;
"@MMK_R_V" = -90;
"@MMK_R_W" = -60;
"@MMK_R_Y" = -100;
"@MMK_R_f" = -50;
"@MMK_R_o" = -60;
"@MMK_R_s" = -30;
"@MMK_R_t" = -50;
"@MMK_R_u" = -30;
"@MMK_R_v" = -50;
};
"@MMK_L_quote" = {
"@MMK_R_A" = -63;
"@MMK_R_J" = -120;
"@MMK_R_a" = -40;
"@MMK_R_comma" = -74;
"@MMK_R_o" = -20;
"@MMK_R_s" = -30;
};
"@MMK_L_r" = {
"@MMK_R_a" = -20;
"@MMK_R_comma" = -30;
"@MMK_R_dash" = 0;
"@MMK_R_g" = -30;
"@MMK_R_o" = -20;
"@MMK_R_space" = -30;
};
"@MMK_L_s" = {
"@MMK_R_T" = -80;
"@MMK_R_a" = 0;
"@MMK_R_g" = -10;
"@MMK_R_s" = -20;
"@MMK_R_t" = -20;
};
"@MMK_L_seven" = {
"@MMK_R_A" = -70;
"@MMK_R_comma" = -100;
"@MMK_R_dash" = -50;
"@MMK_R_four" = -80;
"@MMK_R_sixgeom" = -60;
"@MMK_R_two" = -30;
"@MMK_R_zero" = -30;
"@MMK_R_zero.subs" = -60;
};
"@MMK_L_sixgeom" = {
"@MMK_R_ninegeom" = -40;
"@MMK_R_one" = -40;
"@MMK_R_seven" = -70;
"@MMK_R_two" = -40;
};
"@MMK_L_space" = {
"@MMK_R_T" = -20;
"@MMK_R_V" = -30;
"@MMK_R_Y" = -30;
"@MMK_R_v" = -30;
};
"@MMK_L_t" = {
"@MMK_R_a" = -20;
"@MMK_R_o" = -20;
"@MMK_R_u" = -20;
};
"@MMK_L_two" = {
"@MMK_R_four" = -40;
"@MMK_R_seven" = -40;
"@MMK_R_sixgeom" = -30;
"@MMK_R_zero" = -20;
};
"@MMK_L_u" = {
"@MMK_R_T" = -70;
};
"@MMK_L_v" = {
"@MMK_R_T" = -40;
"@MMK_R_a" = -20;
"@MMK_R_comma" = -70;
"@MMK_R_g" = -40;
"@MMK_R_o" = -20;
"@MMK_R_parenright" = -30;
"@MMK_R_space" = -30;
"@MMK_R_zero.subs" = -50;
};
"@MMK_L_x" = {
"@MMK_R_dash" = 0;
"@MMK_R_o" = -10;
};
"@MMK_L_z" = {
"@MMK_R_dash" = 0;
};
"@MMK_L_zero" = {
"@MMK_R_A" = 0;
"@MMK_R_comma" = -40;
"@MMK_R_four" = 0;
"@MMK_R_ninegeom" = -30;
"@MMK_R_one" = 0;
"@MMK_R_seven" = -30;
"@MMK_R_two" = -30;
"@MMK_R_zero" = -20;
};
"@MMK_L_zero.numr" = {
"@MMK_R_fraction" = -30;
};
"@MMK_L_zero.subs" = {
"@MMK_R_A" = 0;
"@MMK_R_T" = -60;
"@MMK_R_V" = -80;
"@MMK_R_W" = -30;
"@MMK_R_Y" = -90;
"@MMK_R_fraction" = -50;
"@MMK_R_v" = -50;
};
"@MMK_L_zero.sups" = {
"@MMK_R_A" = -80;
"@MMK_R_J" = -130;
"@MMK_R_a" = -40;
"@MMK_R_o" = -50;
};
Germandbls = {
"@MMK_R_T" = -20;
};
"eight-ar" = {
"four-ar" = -20;
"seven-ar" = -90;
"six-ar" = -90;
};
"eight-persian" = {
"nine-ar" = -40;
"seven-persian.locl" = -40;
"zero-persian.locl" = -10;
};
"four-ar" = {
"seven-ar" = -30;
"six-ar" = -30;
"three-ar" = -10;
"two-ar" = -40;
};
"four-persian.locl" = {
"seven-persian.locl" = -70;
"zero-persian.locl" = -70;
};
one.numr = {
"@MMK_R_fraction" = -50;
};
quoteright = {
"@MMK_R_o" = -60;
};
"seven-ar" = {
"eight-ar" = -90;
};
"seven-persian" = {
"seven-persian.locl" = -40;
};
"seven-persian.locl" = {
"four-persian.locl" = -70;
"zero-persian.locl" = -60;
};
seven.numr = {
"@MMK_R_fraction" = -90;
};
"two-persian" = {
"zero-persian.locl" = -60;
};
"zero-persian.locl" = {
"eight-persian" = -10;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
numbers = (
{
name = dotshift;
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright 2022 The Fustat Project Authors (https://github.com/Kief-Type-Foundry/Fustat)";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "Mohamed Gaber, Khaled Hosny, Laura Garcia Mut";
}
);
},
{
key = designerURL;
value = "https://gaber.design/";
},
{
key = licenses;
values = (
{
language = ENG;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL";
}
);
},
{
key = licenseURL;
value = "https://scripts.sil.org/OFL";
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Kief Type Foundry, Alif Type Foundry, Hard Type Foundry";
}
);
},
{
key = manufacturerURL;
value = "https://kieftype.com/";
},
{
key = vendorID;
value = 1KTF;
}
);
settings = {
keepAlternatesTogether = 1;
};
unitsPerEm = 1000;
userData = {
GSDimensionPlugin.Dimensions = {
"090CB6A0-BE7C-4D17-A551-206C7456A8A3" = {
HH = "128";
HV = "135";
OH = "128";
OV = "135";
arAlef = "135";
arBar = "119";
nV = "135";
nd = "100";
oH = "119";
oV = "135";
tH = "119";
};
"14EEE41F-D714-4243-A717-73445EE7DABA" = {
HH = "73";
HV = "75";
OH = "73";
OV = "77";
arAlef = "85";
arBar = "75";
nV = "75";
nd = "73";
oH = "73";
oV = "75";
tH = "73";
};
"3114FB65-9464-41A5-B67E-A8F9F43C0EF1" = {
HH = "28";
HV = "30";
OH = "28";
OV = "30";
nV = "30";
nd = "28";
oH = "28";
oV = "30";
tH = "28";
};
"71F4E291-54FE-4A7B-B455-BB7A4957EE6A" = {
arAlef = "85";
arBar = "75";
};
"EE16FD54-D6E3-4223-A7AD-576F8EEE874B" = {
arAlef = "85";
arBar = "80";
};
};
};
versionMajor = 1;
versionMinor = 5;
}
